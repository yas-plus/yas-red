webpackJsonp([10],{"+1TC":function(e,t){e.exports={name:"uint64",checksum160:"fixed_bytes20",checksum256:"fixed_bytes32",checksum512:"fixed_bytes64",signature:"fixed_bytes65",public_key:"fixed_bytes33",message_type:"fixed_string16",symbol:"uint64",symbol_code:"uint64",field_name:"string",account_name:"name",permission_name:"name",type_name:"string",token_name:"name",table_name:"name",scope_name:"name",action_name:"name",time_point:"int64",time_point_sec:"time",timestamp:"uint32",block_timestamp_type:"timestamp",block_id:"fixed_bytes32",checksum_type:"fixed_bytes32",checksum256_type:"fixed_bytes32",checksum512_type:"fixed_bytes64",checksum160_type:"fixed_bytes20",sha256:"fixed_bytes32",sha512:"fixed_bytes64",sha160:"fixed_bytes20",weight_type:"uint16",block_num_type:"uint32",share_type:"int64",digest_type:"checksum_type",context_free_type:"bytes",unsigned_int:"varuint32",bool:"uint8",key_weight:{base:"",fields:{key:"public_key",weight:"uint16"}},block_signing_authority:{base:"",fields:{threshold:"uint32",keys:"key_weight[]"}},block_signing_authority$:"block_signing_authority[]",extensions_type:{base:"",fields:{type:"uint16",data:"bytes"}},transaction_header:{base:"",fields:{expiration:"time",ref_block_num:"uint16",ref_block_prefix:"uint32",max_net_usage_words:"unsigned_int",max_cpu_usage_ms:"uint8",delay_sec:"unsigned_int"}},transaction:{base:"transaction_header",fields:{context_free_actions:"action[]",actions:"action[]",transaction_extensions:"extensions_type[]"}},signed_transaction:{base:"transaction",fields:{signatures:"signature[]",context_free_data:"bytes[]"}},fields:"field_def[]",field_def:{fields:{name:"field_name",type:"type_name"}},asset:{fields:{amount:"share_type",sym:"symbol"}},producer_key:{fields:{producer_name:"account_name",block_signing_key:"public_key"}},producer_schedule:{fields:{version:"uint32",producers:"producer_key[]"}},chain_config:{fields:{target_block_size:"uint32",max_block_size:"uint32",target_block_acts_per_scope:"uint32",max_block_acts_per_scope:"uint32",target_block_acts:"uint32",max_block_acts:"uint32",real_threads:"uint64",max_storage_size:"uint64",max_transaction_lifetime:"uint32",max_authority_depth:"uint16",max_transaction_exec_time:"uint32",max_inline_depth:"uint16",max_inline_action_size:"uint32",max_generated_transaction_size:"uint32"}},type_def:{base:"",fields:{new_type_name:"type_name",type:"type_name"}},struct_def:{base:"",fields:{name:"type_name",base:"type_name",fields:"field_def[]"}},clause_pair:{base:"",fields:{id:"string",body:"string"}},error_message:{base:"",fields:{error_code:"uint64",error_msg:"string"}},abi_def:{base:"",fields:{version:"string",types:"type_def[]",structs:"struct_def[]",actions:"action_def[]",tables:"table_def[]",ricardian_clauses:"clause_pair[]",error_messages:"error_message[]",abi_extensions:"extensions_type[]"}},table_def:{base:"",fields:{name:"table_name",index_type:"type_name",key_names:"field_name[]",key_types:"type_name[]",type:"type_name"}},permission_level:{base:"",fields:{actor:"account_name",permission:"permission_name"}},action:{base:"",fields:{account:"account_name",name:"action_name",authorization:"permission_level[]",data:"bytes"}},action_def:{base:"",fields:{name:"action_name",type:"type_name",ricardian_contract:"string"}},block_header:{base:"",fields:{previous:"checksum256",timestamp:"timestamp",transaction_mroot:"checksum256",action_mroot:"checksum256",block_mroot:"checksum256",producer:"account_name",schedule_version:"uint32",new_producers:"producer_schedule?"}},packed_transaction:{fields:{signatures:"signature[]",compression:"uint8",packed_context_free_data:"bytes",packed_trx:"bytes"}}}},0:function(e,t){},"05Ij":function(e,t){e.exports={secp128r1:{p:"fffffffdffffffffffffffffffffffff",a:"fffffffdfffffffffffffffffffffffc",b:"e87579c11079f43dd824993c2cee5ed3",n:"fffffffe0000000075a30d1b9038a115",h:"01",Gx:"161ff7528b899b2d0c28607ca52c5b86",Gy:"cf5ac8395bafeb13c02da292dded7a83"},secp160k1:{p:"fffffffffffffffffffffffffffffffeffffac73",a:"00",b:"07",n:"0100000000000000000001b8fa16dfab9aca16b6b3",h:"01",Gx:"3b4c382ce37aa192a4019e763036f4f5dd4d7ebb",Gy:"938cf935318fdced6bc28286531733c3f03c4fee"},secp160r1:{p:"ffffffffffffffffffffffffffffffff7fffffff",a:"ffffffffffffffffffffffffffffffff7ffffffc",b:"1c97befc54bd7a8b65acf89f81d4d4adc565fa45",n:"0100000000000000000001f4c8f927aed3ca752257",h:"01",Gx:"4a96b5688ef573284664698968c38bb913cbfc82",Gy:"23a628553168947d59dcc912042351377ac5fb32"},secp192k1:{p:"fffffffffffffffffffffffffffffffffffffffeffffee37",a:"00",b:"03",n:"fffffffffffffffffffffffe26f2fc170f69466a74defd8d",h:"01",Gx:"db4ff10ec057e9ae26b07d0280b7f4341da5d1b1eae06c7d",Gy:"9b2f2f6d9c5628a7844163d015be86344082aa88d95e2f9d"},secp192r1:{p:"fffffffffffffffffffffffffffffffeffffffffffffffff",a:"fffffffffffffffffffffffffffffffefffffffffffffffc",b:"64210519e59c80e70fa7e9ab72243049feb8deecc146b9b1",n:"ffffffffffffffffffffffff99def836146bc9b1b4d22831",h:"01",Gx:"188da80eb03090f67cbf20eb43a18800f4ff0afd82ff1012",Gy:"07192b95ffc8da78631011ed6b24cdd573f977a11e794811"},secp256k1:{p:"fffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f",a:"00",b:"07",n:"fffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141",h:"01",Gx:"79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798",Gy:"483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8"},secp256r1:{p:"ffffffff00000001000000000000000000000000ffffffffffffffffffffffff",a:"ffffffff00000001000000000000000000000000fffffffffffffffffffffffc",b:"5ac635d8aa3a93e7b3ebbd55769886bc651d06b0cc53b0f63bce3c3e27d2604b",n:"ffffffff00000000ffffffffffffffffbce6faada7179e84f3b9cac2fc632551",h:"01",Gx:"6b17d1f2e12c4247f8bce6e563a440f277037d812deb33a0f4a13945d898c296",Gy:"4fe342e2fe1a7f9b8ee7eb4a7c0f9e162bce33576b315ececbb6406837bf51f5"}}},1:function(e,t){},"1QQ/":function(e,t){e.exports={name:"bigi",version:"1.4.2",description:"Big integers.",keywords:["cryptography","math","bitcoin","arbitrary","precision","arithmetic","big","integer","int","number","biginteger","bigint","bignumber","decimal","float"],devDependencies:{coveralls:"^2.11.2",istanbul:"^0.3.5",jshint:"^2.5.1",mocha:"^2.1.0",mochify:"^2.1.0"},repository:{url:"https://github.com/cryptocoinjs/bigi",type:"git"},main:"./lib/index.js",scripts:{"browser-test":"./node_modules/.bin/mochify --wd -R spec",test:"./node_modules/.bin/_mocha -- test/*.js",jshint:"./node_modules/.bin/jshint --config jshint.json lib/*.js ; true",unit:"./node_modules/.bin/mocha",coverage:"./node_modules/.bin/istanbul cover ./node_modules/.bin/_mocha -- --reporter list test/*.js",coveralls:"npm run-script coverage && node ./node_modules/.bin/coveralls < coverage/lcov.info"},dependencies:{},testling:{files:"test/*.js",harness:"mocha",browsers:["ie/9..latest","firefox/latest","chrome/latest","safari/6.0..latest","iphone/6.0..latest","android-browser/4.2..latest"]}}},2:function(e,t){},"6ZSt":function(e,t){e.exports={"aes-128-ecb":{cipher:"AES",key:128,iv:0,mode:"ECB",type:"block"},"aes-192-ecb":{cipher:"AES",key:192,iv:0,mode:"ECB",type:"block"},"aes-256-ecb":{cipher:"AES",key:256,iv:0,mode:"ECB",type:"block"},"aes-128-cbc":{cipher:"AES",key:128,iv:16,mode:"CBC",type:"block"},"aes-192-cbc":{cipher:"AES",key:192,iv:16,mode:"CBC",type:"block"},"aes-256-cbc":{cipher:"AES",key:256,iv:16,mode:"CBC",type:"block"},aes128:{cipher:"AES",key:128,iv:16,mode:"CBC",type:"block"},aes192:{cipher:"AES",key:192,iv:16,mode:"CBC",type:"block"},aes256:{cipher:"AES",key:256,iv:16,mode:"CBC",type:"block"},"aes-128-cfb":{cipher:"AES",key:128,iv:16,mode:"CFB",type:"stream"},"aes-192-cfb":{cipher:"AES",key:192,iv:16,mode:"CFB",type:"stream"},"aes-256-cfb":{cipher:"AES",key:256,iv:16,mode:"CFB",type:"stream"},"aes-128-cfb8":{cipher:"AES",key:128,iv:16,mode:"CFB8",type:"stream"},"aes-192-cfb8":{cipher:"AES",key:192,iv:16,mode:"CFB8",type:"stream"},"aes-256-cfb8":{cipher:"AES",key:256,iv:16,mode:"CFB8",type:"stream"},"aes-128-cfb1":{cipher:"AES",key:128,iv:16,mode:"CFB1",type:"stream"},"aes-192-cfb1":{cipher:"AES",key:192,iv:16,mode:"CFB1",type:"stream"},"aes-256-cfb1":{cipher:"AES",key:256,iv:16,mode:"CFB1",type:"stream"},"aes-128-ofb":{cipher:"AES",key:128,iv:16,mode:"OFB",type:"stream"},"aes-192-ofb":{cipher:"AES",key:192,iv:16,mode:"OFB",type:"stream"},"aes-256-ofb":{cipher:"AES",key:256,iv:16,mode:"OFB",type:"stream"},"aes-128-ctr":{cipher:"AES",key:128,iv:16,mode:"CTR",type:"stream"},"aes-192-ctr":{cipher:"AES",key:192,iv:16,mode:"CTR",type:"stream"},"aes-256-ctr":{cipher:"AES",key:256,iv:16,mode:"CTR",type:"stream"},"aes-128-gcm":{cipher:"AES",key:128,iv:12,mode:"GCM",type:"auth"},"aes-192-gcm":{cipher:"AES",key:192,iv:12,mode:"GCM",type:"auth"},"aes-256-gcm":{cipher:"AES",key:256,iv:12,mode:"GCM",type:"auth"}}},"8njW":function(e,t){e.exports={version:"eosio::abi/1.1",types:[],structs:[{name:"account",base:"",fields:[{name:"balance",type:"asset"}]},{name:"close",base:"",fields:[{name:"owner",type:"name"},{name:"symbol",type:"symbol"}]},{name:"create",base:"",fields:[{name:"issuer",type:"name"},{name:"maximum_supply",type:"asset"}]},{name:"currency_stats",base:"",fields:[{name:"supply",type:"asset"},{name:"max_supply",type:"asset"},{name:"issuer",type:"name"}]},{name:"issue",base:"",fields:[{name:"to",type:"name"},{name:"quantity",type:"asset"},{name:"memo",type:"string"}]},{name:"open",base:"",fields:[{name:"owner",type:"name"},{name:"symbol",type:"symbol"},{name:"ram_payer",type:"name"}]},{name:"retire",base:"",fields:[{name:"quantity",type:"asset"},{name:"memo",type:"string"}]},{name:"transfer",base:"",fields:[{name:"from",type:"name"},{name:"to",type:"name"},{name:"quantity",type:"asset"},{name:"memo",type:"string"}]}],actions:[{name:"close",type:"close",ricardian_contract:"---\nspec_version: \"0.2.0\"\ntitle: Close Token Balance\nsummary: 'Close {{nowrap owner}}’s zero quantity balance'\nicon: http://127.0.0.1/ricardian_assets/eosio.contracts/icons/token.png#207ff68b0406eaa56618b08bda81d6a0954543f36adc328ab3065f31a5c5d654\n---\n\n{{owner}} agrees to close their zero quantity balance for the {{symbol_to_symbol_code symbol}} token.\n\nRAM will be refunded to the RAM payer of the {{symbol_to_symbol_code symbol}} token balance for {{owner}}."},{name:"create",type:"create",ricardian_contract:"---\nspec_version: \"0.2.0\"\ntitle: Create New Token\nsummary: 'Create a new token'\nicon: http://127.0.0.1/ricardian_assets/eosio.contracts/icons/token.png#207ff68b0406eaa56618b08bda81d6a0954543f36adc328ab3065f31a5c5d654\n---\n\n{{$action.account}} agrees to create a new token with symbol {{asset_to_symbol_code maximum_supply}} to be managed by {{issuer}}.\n\nThis action will not result any any tokens being issued into circulation.\n\n{{issuer}} will be allowed to issue tokens into circulation, up to a maximum supply of {{maximum_supply}}.\n\nRAM will deducted from {{$action.account}}’s resources to create the necessary records."},{name:"issue",type:"issue",ricardian_contract:"---\nspec_version: \"0.2.0\"\ntitle: Issue Tokens into Circulation\nsummary: 'Issue {{nowrap quantity}} into circulation and transfer into {{nowrap to}}’s account'\nicon: http://127.0.0.1/ricardian_assets/eosio.contracts/icons/token.png#207ff68b0406eaa56618b08bda81d6a0954543f36adc328ab3065f31a5c5d654\n---\n\nThe token manager agrees to issue {{quantity}} into circulation, and transfer it into {{to}}’s account.\n\n{{#if memo}}There is a memo attached to the transfer stating:\n{{memo}}\n{{/if}}\n\nIf {{to}} does not have a balance for {{asset_to_symbol_code quantity}}, or the token manager does not have a balance for {{asset_to_symbol_code quantity}}, the token manager will be designated as the RAM payer of the {{asset_to_symbol_code quantity}} token balance for {{to}}. As a result, RAM will be deducted from the token manager’s resources to create the necessary records.\n\nThis action does not allow the total quantity to exceed the max allowed supply of the token."},{name:"open",type:"open",ricardian_contract:"---\nspec_version: \"0.2.0\"\ntitle: Open Token Balance\nsummary: 'Open a zero quantity balance for {{nowrap owner}}'\nicon: http://127.0.0.1/ricardian_assets/eosio.contracts/icons/token.png#207ff68b0406eaa56618b08bda81d6a0954543f36adc328ab3065f31a5c5d654\n---\n\n{{ram_payer}} agrees to establish a zero quantity balance for {{owner}} for the {{symbol_to_symbol_code symbol}} token.\n\nIf {{owner}} does not have a balance for {{symbol_to_symbol_code symbol}}, {{ram_payer}} will be designated as the RAM payer of the {{symbol_to_symbol_code symbol}} token balance for {{owner}}. As a result, RAM will be deducted from {{ram_payer}}’s resources to create the necessary records."},{name:"retire",type:"retire",ricardian_contract:"---\nspec_version: \"0.2.0\"\ntitle: Remove Tokens from Circulation\nsummary: 'Remove {{nowrap quantity}} from circulation'\nicon: http://127.0.0.1/ricardian_assets/eosio.contracts/icons/token.png#207ff68b0406eaa56618b08bda81d6a0954543f36adc328ab3065f31a5c5d654\n---\n\nThe token manager agrees to remove {{quantity}} from circulation, taken from their own account.\n\n{{#if memo}} There is a memo attached to the action stating:\n{{memo}}\n{{/if}}"},{name:"transfer",type:"transfer",ricardian_contract:"---\nspec_version: \"0.2.0\"\ntitle: Transfer Tokens\nsummary: 'Send {{nowrap quantity}} from {{nowrap from}} to {{nowrap to}}'\nicon: http://127.0.0.1/ricardian_assets/eosio.contracts/icons/transfer.png#5dfad0df72772ee1ccc155e670c1d124f5c5122f1d5027565df38b418042d1dd\n---\n\n{{from}} agrees to send {{quantity}} to {{to}}.\n\n{{#if memo}}There is a memo attached to the transfer stating:\n{{memo}}\n{{/if}}\n\nIf {{from}} is not already the RAM payer of their {{asset_to_symbol_code quantity}} token balance, {{from}} will be designated as such. As a result, RAM will be deducted from {{from}}’s resources to refund the original RAM payer.\n\nIf {{to}} does not have a balance for {{asset_to_symbol_code quantity}}, {{from}} will be designated as the RAM payer of the {{asset_to_symbol_code quantity}} token balance for {{to}}. As a result, RAM will be deducted from {{from}}’s resources to create the necessary records."}],tables:[{name:"accounts",index_type:"i64",key_names:[],key_types:[],type:"account"},{name:"stat",index_type:"i64",key_names:[],key_types:[],type:"currency_stats"}],ricardian_clauses:[],error_messages:[],abi_extensions:[],variants:[]}},FQqZ:function(e,t){e.exports={"Red Packet":"Red Packet",RedPacketCode:"Please enter Red Envelope code","Create Red Envelope":"Create Red Envelope","Create YAS Account":"Create YAS Account","About Us":"About Us","Fix Amount":"Fix Amount","Random Amount":"Random Amount","Account Creation":"Account Creation",Total:"Total",Quantity:"Quantity",Min:"Min 0.1",Max:"Max 1000","Best wishes":"Best wishes",RedPacketMessage:"The amount of the Red Envelope depends on the actual transfer","Transfer YAS to Red Envelope":"Transfer YAS to Red Envelope",RedPacketMessageOther:"Charge 1% fee, Unclaimed amount will be refund after 24 hours",Account:"Account","Feeling Lucky":"Feeling Lucky",COPY:"COPY","Please input your account":"Please input your account",AccountText:"12 characters, from the set of a-z and 1-5",PublicKey:"PublicKey","Create New PublicKey":"Create New PublicKey","Please enter the public key":"Please enter the public key",PublicKeyMessage:"Owner key is the same as active key.",PrivateKey:"PrivateKey","Do not tell anyone":"Do not tell anyone","Red Envelope Code":"Red Envelope Code","Save offline":"Save offline","Save offline Content":"It is recommended that you copy or print the private key and store it in a secure location","Please do not use network transmission":"Please do not use network transmission","Please do not use network transmission Content":"Do not transmit the private key via a network tool, such as sending it to a computer via WeChat. Once the private key is acquired by hackers, the irreparable loss of assets will happen",Tips:"Tips","Tips Content":"Creating an account will consume a small portion of YAS, and the rest will be transferred to the account",Usage:"Usage","Usage Content":"Use math wallet or math Extension to import private key and use your YAS account.","Create Account":"Create Account","Introduction of Red Envelopes":"Introduction of Red Envelopes","Ordinary Red Envelopes":"Ordinary Red Envelopes","Ordinary Red Envelopes Content":"Ordinary Red Envelopes can be sent one-to-one or one-to-many. After the user sets the total value of Red Envelopes and the number of Red Envelopes, a string will be generated, which can be shared to various social platforms. Everyone will receive the same value of Red Envelope.","Lucky Red Envelopes":"Lucky Red Envelopes","Lucky Red Envelopes Content":"Lucky Red Envelopes can be sent one-to-many. After the user sets the total value of Red Envelopes and the number of Red Envelopes, a string will be generated, which can be shared to various social platforms. Everyone will receive a random value of Red Envelopes.","The Red Envelope for Account Creation":"The Red Envelope for Account Creation","The Red Envelope for Account Creation Content":"The Red Envelope for Account Creation can be sent one-to-one or one-to-many, which is specifically used to create YAS account. The existing YAS accounts cannot collect the Red Envelope. Users set the amount of a single Red Envelope and the number of Red Envelopes then share the Red Envelopes to various social platforms. If the amount of a Red Envelope is less than the amount currently required to create an YAS account, the user will fail to collect the Red Envelope.","Service Fee":"Service Fee","Service Fee Content":"0.1% processing fee will be charged to redeemed Red Envelope.No fee will be charged to the unredeemed Red Envelope",AboutText1:"YAS Red Envelope is a platform developed by bp plusplusplus to collect and send YAS Red Envelopes online",AboutTextOther:" ) and YAS community to collect and send YAS Red Envelopes online",AboutText2:"Users can receive Red Envelopes by account just in web pages. There are Ordinary Red Envelopes and Lucky Red Envelopes. Users can create a red envelope by 51token or ironman.",AboutText3:"Currently Chinese and English versions are supported","Red Envelope Detail":"Red Envelope Detail","Red Envelope Id":"Red Envelope Id","The ID allows you to view red envelope information":"The ID allows you to view red envelope information","Share the string to your friends, let your friends get the red envelope":"Share the string to your friends, let your friends get the red envelope","No data":"No data",Remain:"Remain",Create:"Create",From:"From",Normal:"Normal",Random:"Random",Amount:"Amount",EnterRedMessage:"Please enter the correct red envelope code","Copy Success":"Copy Success","Copy Fail":"Copy Fail",RedOverMessage:"All red envelopes have been taken.",AlreadyTaken:"You have already taken this envelope.",RedNoExitMessage:"Red packets do not exist.",TranSuccess:"Transaction Success",TranFail:"Transaction Fail",AccountExitMessage:"Account already exists",AccountNull:"Please enter your account name.",AccountError:"Please enter the correct account name.",PublicKeyNull:"Please enter your public key",PrivateKeyNull:"Please enter your private key",RedStrNull:"Please enter a red envelope code.",RedMoneyMessage:"Please enter the correct amount of red envelope",RedNumMessage:"Please enter the correct number of red envelopes",NoAccount:"Do not have Account ?",RedInfo1:"Open the url in a browser ",RedInfo2:"Get YAS red envelopes or create free YAS accounts",RedInfo3:"Users can create YAS accounts free by using fund in red envelopes.",Loading:"Loading...",NZInfo1:"Please slide to the right to verify.",NZInfo2:"Success","Cooperation Institutions":"Cooperation Institutions"}},Hujw:function(e,t){e.exports={get_actions:{params:{account_name:"account_name",pos:{type:"int32?",doc:"An absolute sequence positon -1 is the end/last action"},offset:{type:"int32?",doc:"The number of actions relative to pos, negative numbers return [pos-offset,pos), positive numbers return [pos,pos+offset)"}},results:{actions:"ordered_action_result[]",last_irreversible_block:"uint32",time_limit_exceeded_error:"bool?"},structs:[{name:"ordered_action_result",fields:{global_action_seq:"uint64",account_action_seq:"int32",block_num:"uint32",block_time:"block_timestamp_type",action_trace:"variant"}}]},get_transaction:{brief:"Retrieve a transaction from the blockchain.",params:{id:"transaction_id_type",block_num_hint:{type:"uint32?",default:0,doc:"A non-zero block number allows shorter transaction IDs (8 hex, 4 bytes)"}},results:{id:"transaction_id_type",trx:"variant",block_time:"block_timestamp_type",block_num:"uint32",last_irreversible_block:"uint32",traces:"variant[]"}},get_key_accounts:{params:{public_key:"public_key_type"},results:{account_names:"account_name[]"}},get_controlled_accounts:{params:{controlling_account:"account_name"},results:{controlled_accounts:"account_name[]"}}}},NHnr:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=n("7+uW"),o={name:"App",created:function(){localStorage.getItem("Lang")?this.$i18n.locale=localStorage.getItem("Lang"):localStorage.setItem("Lang",this.$i18n.locale)}},r={render:function(){var e=this.$createElement,t=this._self._c||e;return t("div",{attrs:{id:"app"}},[t("router-view")],1)},staticRenderFns:[]};var i=n("VU/8")(o,r,!1,function(e){n("v/I6")},"data-v-a0b57f54",null).exports,s=n("/ocq");a.default.use(s.a);var c=new s.a({routes:[{path:"/",name:"home",component:function(e){return n.e(1).then(function(){var t=[n("wUZA")];e.apply(null,t)}.bind(this)).catch(n.oe)}},{path:"/red",name:"red",component:function(e){return n.e(3).then(function(){var t=[n("2KAF")];e.apply(null,t)}.bind(this)).catch(n.oe)}},{path:"/redlist",name:"redlist",component:function(e){return Promise.all([n.e(0),n.e(8)]).then(function(){var t=[n("7ClB")];e.apply(null,t)}.bind(this)).catch(n.oe)}},{path:"/account",name:"account",component:function(e){return n.e(5).then(function(){var t=[n("2get")];e.apply(null,t)}.bind(this)).catch(n.oe)}},{path:"/about",name:"about",component:function(e){return Promise.all([n.e(0),n.e(7)]).then(function(){var t=[n("zRCK")];e.apply(null,t)}.bind(this)).catch(n.oe)}},{path:"/redabout",name:"redabout",component:function(e){return Promise.all([n.e(0),n.e(6)]).then(function(){var t=[n("zm9p")];e.apply(null,t)}.bind(this)).catch(n.oe)}},{path:"/receive",name:"receive",component:function(e){return n.e(2).then(function(){var t=[n("5YGR")];e.apply(null,t)}.bind(this)).catch(n.oe)}},{path:"/detail",name:"detail",component:function(e){return Promise.all([n.e(0),n.e(4)]).then(function(){var t=[n("lFou")];e.apply(null,t)}.bind(this)).catch(n.oe)}}]}),d=n("NYxO");a.default.use(d.a);var f=new d.a.Store({state:{lang:"zh"},mutations:{UPDATE_LANG:function(e,t){e.lang=t}}}),m=(n("n4oI"),n("kWPD"),n("TXmL")),l=n("zL8q"),p=n.n(l),u=(n("tvR6"),n("FQqZ")),y=n.n(u),b=n("hLMD"),h=n.n(b),_=n("wvfG"),g=n.n(_),v=(a.default.filter("time",function(e,t){switch(e.toString().length){case 10:e=new Date(1e3*parseInt(e));break;default:e=new Date(parseInt(e))}var n=e.getFullYear(),a=e.getMonth()+1,o=e.getDate(),r=e.getHours(),i=e.getMinutes(),s=e.getSeconds(),c=e.getMilliseconds();switch(a=a<10?"0"+a:a,o=o<10?"0"+o:o,r=r<10?"0"+r:r,i=i<10?"0"+i:i,s=s<10?"0"+s:s,c=c<500?0:5,t){case 1:e=n+"-"+a+"-"+o;break;case 2:e=r+":"+i+":"+s;break;case 3:e=r+":"+i+":"+s+" "+c;break;case 4:e=r+":"+i;break;default:e=n+"-"+a+"-"+o+" "+r+":"+i+":"+s}return e}),n("Xxa5")),k=n.n(v),w=n("exGp"),x=n.n(w),R=n("//Fk"),A=n.n(R),E=n("NUNl"),C=n.n(E),T=n("BVsN"),S=n.n(T),P="ed8636abfe625d99fc9a759d49a016fd8dcae9193676a020aae2540c9fffe32f",q={host:"rpc.yas.plus",blockchain:"eos",chainId:P,port:443,protocol:"https"},I={broadcast:!0,sign:!0,chainId:P},M=C.a.modules.ecc,N=C()({httpEndpoint:"https://rpc.yas.plus",chainId:P,keyProvider:M.PrivateKey.fromHex("2d85addc58190daeee657f751a75c2666c410523bf89d616c8bf798e306fe719").toString()}),U={getRecord:function(e){return N.getTableRows({scope:"redredredred",code:"redredredred",table:"envelopes",lower_bound:e,json:!0}).then(function(t){var n=t.rows[0];return n&&e==n.envelope_id?n:A.a.reject("RedNoExitMessage")})},generateKeyPair:function(){var e=x()(k.a.mark(function e(){var t,n;return k.a.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,M.randomKey();case 2:return t=e.sent,n=M.privateToPublic(t),e.abrupt("return",{privateKey:t,publicKey:n});case 5:case"end":return e.stop()}},e,this)}));return function(){return e.apply(this,arguments)}}(),sign:function(e,t,n,a,o){var r=t+e+n,i=M.PrivateKey.fromHex(a+o).toString(),s=S()("sha256").update(r).digest("hex");console.log(s);var c=M.Signature.signHash(s,i).toString();return console.log(c),M.Signature.from(c)},newAccount:function(e,t,n,a){var o={actions:[{account:"redredredred",name:"newaccount",authorization:[{actor:"getredgetred",permission:"active"}],data:{envelope_id:e,user:t,sig:n,public_key_str:a}}]};return N.transaction(o)},cutKey:function(e){var t=M.PrivateKey(e).toBuffer().toString("hex"),n=t.length/2;return{f:t.slice(0,n),l:t.slice(n)}},connectIdentity:function(){var e=this;return new A.a(function(t,n){window.scatter?window.scatter.getIdentity({accounts:[q]}).then(function(e){var n=e.accounts[0];t(n)}).catch(function(e){console.error(e),n(e)}):setTimeout(function(){e.connectIdentity().then(function(e){t(e)}).catch(function(e){n(e)})},2e3)})},changeIdentity:function(){return new A.a(function(e,t){if(window.scatter)return window.scatter.forgetIdentity().then(function(){e()});t("ironman not loaded!")})},sendEnvelope:function(e,t,n){var a=window.scatter.eos(q,C.a,I,"https"),o={actions:[{account:"eosio.token",name:"transfer",authorization:[{actor:e.name,permission:e.authority}],data:{from:e.name,to:"redredredred",quantity:t,memo:n}}]};return a.transaction(o)},checkAccountExist:function(e){var t=this;return x()(k.a.mark(function n(){return k.a.wrap(function(t){for(;;)switch(t.prev=t.next){case 0:return t.prev=0,t.next=3,N.getAccount(e);case 3:if(t.sent.account_name!=e){t.next=8;break}return t.abrupt("return",!0);case 8:return t.abrupt("return",!1);case 9:t.next=14;break;case 11:return t.prev=11,t.t0=t.catch(0),t.abrupt("return",!1);case 14:case"end":return t.stop()}},n,t,[[0,11]])}))()},getEnvelope:function(e,t,n){var a={actions:[{account:"redredredred",name:"get",authorization:[{actor:"getredgetred",permission:"active"}],data:{envelope_id:e,user:t,sig:n}}]};return N.transaction(a)}},F={wxUrl:"https://red.yas.plus"},B=n("8Vd+");a.default.prototype.chainApi=U,a.default.config.productionTip=!1,window.globalConfig=F,a.default.use(p.a),a.default.use(m.a),a.default.use(g.a),a.default.component(B.a.name,B.a);var X=new m.a({locale:"zh",messages:{zh:h.a,en:y.a}});new a.default({el:"#app",router:c,store:f,i18n:X,components:{App:i},template:"<App/>"})},OX0X:function(e,t){e.exports={version:"eosio::abi/1.0",types:[],structs:[{name:"nonce",base:"",fields:[{name:"value",type:"string"}]}],actions:[{name:"nonce",type:"nonce",ricardian_contract:""}],tables:[],ricardian_clauses:[],abi_extensions:[]}},h61r:function(e,t){e.exports={get_info:{brief:"Return general network information.",params:null,results:"string"},get_account:{brief:"Fetch a blockchain account",params:{account_name:"name"},results:"string"},get_code:{brief:"Fetch smart contract code",params:{account_name:"name",code_as_wasm:{type:"bool",default:!1}},results:{account_name:"name",wast:"string",wasm:"string",code_hash:"sha256",abi:"optional<abi_def>"}},get_code_hash:{brief:"",params:{account_name:"name"},results:{account_name:"name",code_hash:"sha256"}},get_abi:{params:{account_name:"name"},results:{account_name:"name",abi:"abi_def?"}},get_raw_code_and_abi:{params:{account_name:"name"},results:{account_name:"name",wasm:"bytes",abi:"abi_def?"}},abi_json_to_bin:{brief:"Manually serialize json into binary hex.  The binayargs is usually stored in Action.data.",params:{code:"name",action:"name",args:"bytes"},results:{binargs:"bytes"}},abi_bin_to_json:{brief:"Convert bin hex back into Abi json definition.",params:{code:"name",action:"name",binargs:"bytes"},results:{args:"bytes"}},get_required_keys:{params:{transaction:"transaction",available_keys:"set[public_key]"},results:"Set[public_key]"},get_block:{brief:"Fetch a block from the blockchain.",params:{block_num_or_id:"string"},results:"variant",errors:{"unknown block":null}},get_block_header_state:{brief:"Fetch the minimum state necessary to validate transaction headers.",params:{block_num_or_id:"string"},results:"string",errors:{block_id_type_exception:"Invalid block ID",unknown_block_exception:"Could not find reversible block"}},get_table_rows:{brief:"Fetch smart contract data from an account.",params:{json:{type:"bool",default:!1},code:"name",scope:"string",table:"name",table_key:"string",lower_bound:{type:"string",default:"0"},upper_bound:{type:"string",default:"-1"},limit:{type:"uint32",default:"10"},key_type:{type:"string",doc:"The key type of --index, primary only supports (i64), all others support (i64, i128, i256, float64, float128). Special type 'name' indicates an account name."},index_position:{type:"string",doc:"1 - primary (first), 2 - secondary index (in order defined by multi_index), 3 - third index, etc"}},results:{rows:{type:"vector",doc:"One row per item, either encoded as hex String or JSON object"},more:{type:"bool",doc:"True if last element in data is not the end and sizeof data() < limit"}}},get_currency_balance:{params:{code:"name",account:"name",symbol:"optional<string>"},results:"asset[]"},get_currency_stats:{params:{code:"name",symbol:"string"},results:{supply:"asset",max_supply:"asset",issuer:"account_name"}},get_producers:{brief:"Fetch smart contract data from producer.",params:{json:{type:"bool",default:!1},lower_bound:"string",limit:{type:"uint32",default:"50"}},results:{rows:{type:"vector",doc:"one row per item, either encoded as hex String or JSON object"},total_producer_vote_weight:{type:"double",doc:"total vote"},more:{type:"string",doc:"fill lower_bound with this value to fetch more rows"}}},get_producer_schedule:{brief:"",params:{},results:{vector:"proposed"}},get_scheduled_transactions:{brief:"",params:{json:{type:"bool",default:!1},lower_bound:{type:"string",doc:"timestamp OR transaction ID"},limit:{type:"uint32",default:"50"}},results:{vector:"transactions",more:{type:"string",doc:"fill lower_bound with this to fetch next set of transactions"}}},push_block:{brief:"Append a block to the chain database.",params:{block:"signed_block"},results:null},push_transaction:{brief:"Attempts to push the transaction into the pending queue.",params:{signed_transaction:"signed_transaction"},results:{transaction_id:"fixed_bytes32",processed:"bytes"}},push_transactions:{brief:"Attempts to push transactions into the pending queue.",params:{"signed_transaction[]":"signed_transaction"},results:"vector[push_transaction.results]"}}},hLMD:function(e,t){e.exports={"Red Packet":"红包",RedPacketCode:"请输入红包串领取红包","YAS Mainnet Red Envelope":"YAS 主网红包","Create Red Envelope":"发红包","Create YAS Account":"创建YAS账号","About Us":"关于我们","Fix Amount":"普通红包","Random Amount":"拼手气红包","Account Creation":"建账号红包",Total:"总金额",Quantity:"红包个数",Min:"最少0.1",Max:"最多1000","Best wishes":"恭喜发财，大吉大利",RedPacketMessage:"红包金额以实际转账为准","Transfer YAS to Red Envelope":"塞钱进红包",RedPacketMessageOther:"红包收取1%手续费，未领取的红包，将于转账成功24小时后发起退款",Account:"账号","Feeling Lucky":"手气不错",COPY:"复制","Please input your account":"请输入您的账号",AccountText:"12位字符，由字母a-z与数字1-5组成",PublicKey:"公钥","Create New PublicKey":"生成新公钥","Please enter the public key":"请输入公钥",PublicKeyMessage:"owner key和active key相同.",PrivateKey:"私钥","Do not tell anyone":"不要透漏给任何人","Red Envelope Code":"红包串","Save offline":"离线保存","Save offline Content":"建议抄写或打印私钥后放置在安全地点保存","Please do not use network transmission":"请勿使用网络传输","Please do not use network transmission Content":"请勿通过网络工具传输私钥，例如用微信发送到电脑。一旦被黑客获取造成不可挽回的资产损失",Tips:"创建提示","Tips Content":"创建账号会扣除部分YAS，剩余部分会转入账号内",Usage:"使用说明","Usage Content":"使用麦子钱包或麦子插件插件导入私钥使用账户。","Create Account":"创建账号","Introduction of Red Envelopes":"红包简介","Ordinary Red Envelopes":"普通红包","Ordinary Red Envelopes Content":"普通红包可以一对一或者一对多发送，用户设置好红包总金额和红包个数后，会生成一串字符串，可分享至各个社交平台，每个被领取的红包金额相同。","Lucky Red Envelopes":"拼手气红包","Lucky Red Envelopes Content":"拼手气红包可以一对多发送，用户设置好红包总金额和红包个数后，会生成一串字符串，可分享至各个社交平台，每个被领取的红包金额随机不等。","The Red Envelope for Account Creation":"建账号红包","The Red Envelope for Account Creation Content":"建账号红包可以一对一或者一对多发送，专为创建YAS账号所用，已存在的YAS账号不能领取该红包。用户设置好单个红包金额和红包个数，生成红包后可分享至各个社交平台。如果单个红包金额小于当前创建YAS账户所需的金额，则用户领取红包失败","Service Fee":"服务费用","Service Fee Content":"红包被领取时合约将自动扣除0.1%的手续费，如果红包超过24小时红包未被领取，合约将自动返还全部YAS并不收取任何费用。",AboutText1:"YAS红包是由力场(lichang.io)孵化、由plusplusplus(yas.plus)节点开发的在线领取和派发YAS红包的平台",AboutTextOther:"）和YAS社区开发的在线领取和派发YAS红包的平台",AboutText2:"用户可以凭口令领取红包，也可以派发普通红包和拼手气红包",AboutText3:"目前支持YAS币种、中英文版本","Red Envelope Detail":"红包详情","Red Envelope Id":"红包id","The ID allows you to view red envelope information":"通过该ID可以查看红包信息","Share the string to your friends, let your friends get the red envelope":"分享该串给您朋友，让你朋友领取红包","No data":"暂无数据",Remain:"剩余",Create:"创建时间",From:"来自",Normal:"普通",Random:"随机",Amount:"金额",EnterRedMessage:"请输入正确的红包串","Copy Success":"复制成功","Copy Failed":"复制失败",RedOverMessage:"红包已领完",AlreadyTaken:"该红包已领取",RedNoExitMessage:"红包不存在",TranSuccess:"交易成功",TranFail:"交易失败",AccountExitMessage:"账号已存在",AccountNull:"请输入你的账号",AccountError:"请输入正确的账号",PublicKeyNull:"请输入你的公钥",PrivateKeyNull:"请输入你的私钥",RedStrNull:"请输入红包串",RedMoneyMessage:"请输入正确的红包金额",RedNumMessage:"请输入正确的红包个数",NoAccount:"还没有YAS账号 ?",RedInfo1:"通过浏览器打开",RedInfo2:"领取YAS红包或者创建免费的YAS账户。",RedInfo3:"可以通过派发建账号红包来使用户免费创建YAS账号。",Loading:"加载中....",NZInfo1:"请向右滑动验证",NZInfo2:"验证通过","Cooperation Institutions":"特约合作机构"}},kWPD:function(e,t){!function(){var e="@charset \"utf-8\";html{color:#000;background:#fff;overflow-y:scroll;-webkit-text-size-adjust:100%;-ms-text-size-adjust:100%}html *{outline:0;-webkit-text-size-adjust:none;-webkit-tap-highlight-color:rgba(0,0,0,0)}html,body{font-family:sans-serif}body,div,dl,dt,dd,ul,ol,li,h1,h2,h3,h4,h5,h6,pre,code,form,fieldset,legend,input,textarea,p,blockquote,th,td,hr,button,article,aside,details,figcaption,figure,footer,header,hgroup,menu,nav,section{margin:0;padding:0}input,select,textarea{font-size:100%}table{border-collapse:collapse;border-spacing:0}fieldset,img{border:0}abbr,acronym{border:0;font-variant:normal}del{text-decoration:line-through}address,caption,cite,code,dfn,em,th,var{font-style:normal;font-weight:500}ol,ul{list-style:none}caption,th{text-align:left}h1,h2,h3,h4,h5,h6{font-size:100%;font-weight:500}q:before,q:after{content:''}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sup{top:-.5em}sub{bottom:-.25em}a:hover{text-decoration:underline}ins,a{text-decoration:none}",t=document.createElement("style");if(document.getElementsByTagName("head")[0].appendChild(t),t.styleSheet)t.styleSheet.disabled||(t.styleSheet.cssText=e);else try{t.innerHTML=e}catch(n){t.innerText=e}}(),function(e,t){function n(){var t=r.getBoundingClientRect().width;t/c>540&&(t=540*c);var n=t/10;r.style.fontSize=n+"px",f.rem=e.rem=n}var a,o=e.document,r=o.documentElement,i=o.querySelector('meta[name="viewport"]'),s=o.querySelector('meta[name="flexible"]'),c=0,d=0,f=t.flexible||(t.flexible={});if(i){console.warn("将根据已有的meta标签来设置缩放比例");var m=i.getAttribute("content").match(/initial\-scale=([\d\.]+)/);m&&(d=parseFloat(m[1]),c=parseInt(1/d))}else if(s){var l=s.getAttribute("content");if(l){var p=l.match(/initial\-dpr=([\d\.]+)/),u=l.match(/maximum\-dpr=([\d\.]+)/);p&&(c=parseFloat(p[1]),d=parseFloat((1/c).toFixed(2))),u&&(c=parseFloat(u[1]),d=parseFloat((1/c).toFixed(2)))}}if(!c&&!d){var y=(e.navigator.appVersion.match(/android/gi),e.navigator.appVersion.match(/iphone/gi)),b=e.devicePixelRatio;d=1/(c=y?b>=3&&(!c||c>=3)?3:b>=2&&(!c||c>=2)?2:1:1)}if(r.setAttribute("data-dpr",c),!i)if((i=o.createElement("meta")).setAttribute("name","viewport"),i.setAttribute("content","initial-scale="+d+", maximum-scale="+d+", minimum-scale="+d+", user-scalable=no"),r.firstElementChild)r.firstElementChild.appendChild(i);else{var h=o.createElement("div");h.appendChild(i),o.write(h.innerHTML)}e.addEventListener("resize",function(){clearTimeout(a),a=setTimeout(n,300)},!1),e.addEventListener("pageshow",function(e){e.persisted&&(clearTimeout(a),a=setTimeout(n,300))},!1),"complete"===o.readyState?o.body.style.fontSize=12*c+"px":o.addEventListener("DOMContentLoaded",function(){o.body.style.fontSize=12*c+"px"},!1),n(),f.dpr=e.dpr=c,f.refreshRem=n,f.rem2px=function(e){var t=parseFloat(e)*this.rem;return"string"==typeof e&&e.match(/rem$/)&&(t+="px"),t},f.px2rem=function(e){var t=parseFloat(e)/this.rem;return"string"==typeof e&&e.match(/px$/)&&(t+="rem"),t}}(window,window.lib||(window.lib={}))},n4oI:function(e,t){},tKPK:function(e,t){e.exports={version:"eosio::abi/1.1",types:[],structs:[{name:"abi_hash",base:"",fields:[{name:"owner",type:"name"},{name:"hash",type:"checksum256"}]},{name:"activate",base:"",fields:[{name:"feature_digest",type:"checksum256"}]},{name:"authority",base:"",fields:[{name:"threshold",type:"uint32"},{name:"keys",type:"key_weight[]"},{name:"accounts",type:"permission_level_weight[]"},{name:"waits",type:"wait_weight[]"}]},{name:"bid_refund",base:"",fields:[{name:"bidder",type:"name"},{name:"amount",type:"asset"}]},{name:"bidname",base:"",fields:[{name:"bidder",type:"name"},{name:"newname",type:"name"},{name:"bid",type:"asset"}]},{name:"bidrefund",base:"",fields:[{name:"bidder",type:"name"},{name:"newname",type:"name"}]},{name:"block_header",base:"",fields:[{name:"timestamp",type:"uint32"},{name:"producer",type:"name"},{name:"confirmed",type:"uint16"},{name:"previous",type:"checksum256"},{name:"transaction_mroot",type:"checksum256"},{name:"action_mroot",type:"checksum256"},{name:"schedule_version",type:"uint32"},{name:"new_producers",type:"producer_schedule?"}]},{name:"block_signing_authority",base:"",fields:[{name:"threshold",type:"uint32"},{name:"keys",type:"key_weight[]"}]},{name:"blockchain_parameters",base:"",fields:[{name:"max_block_net_usage",type:"uint64"},{name:"target_block_net_usage_pct",type:"uint32"},{name:"max_transaction_net_usage",type:"uint32"},{name:"base_per_transaction_net_usage",type:"uint32"},{name:"net_usage_leeway",type:"uint32"},{name:"context_free_discount_net_usage_num",type:"uint32"},{name:"context_free_discount_net_usage_den",type:"uint32"},{name:"max_block_cpu_usage",type:"uint32"},{name:"target_block_cpu_usage_pct",type:"uint32"},{name:"max_transaction_cpu_usage",type:"uint32"},{name:"min_transaction_cpu_usage",type:"uint32"},{name:"max_transaction_lifetime",type:"uint32"},{name:"deferred_trx_expiration_window",type:"uint32"},{name:"max_transaction_delay",type:"uint32"},{name:"max_inline_action_size",type:"uint32"},{name:"max_inline_action_depth",type:"uint16"},{name:"max_authority_depth",type:"uint16"}]},{name:"buyram",base:"",fields:[{name:"payer",type:"name"},{name:"receiver",type:"name"},{name:"quant",type:"asset"}]},{name:"buyrambytes",base:"",fields:[{name:"payer",type:"name"},{name:"receiver",type:"name"},{name:"bytes",type:"uint32"}]},{name:"buyrex",base:"",fields:[{name:"from",type:"name"},{name:"amount",type:"asset"}]},{name:"canceldelay",base:"",fields:[{name:"canceling_auth",type:"permission_level"},{name:"trx_id",type:"checksum256"}]},{name:"claimrewards",base:"",fields:[{name:"owner",type:"name"}]},{name:"closerex",base:"",fields:[{name:"owner",type:"name"}]},{name:"cnclrexorder",base:"",fields:[{name:"owner",type:"name"}]},{name:"connector",base:"",fields:[{name:"balance",type:"asset"},{name:"weight",type:"float64"}]},{name:"consolidate",base:"",fields:[{name:"owner",type:"name"}]},{name:"defcpuloan",base:"",fields:[{name:"from",type:"name"},{name:"loan_num",type:"uint64"},{name:"amount",type:"asset"}]},{name:"defnetloan",base:"",fields:[{name:"from",type:"name"},{name:"loan_num",type:"uint64"},{name:"amount",type:"asset"}]},{name:"delegatebw",base:"",fields:[{name:"from",type:"name"},{name:"receiver",type:"name"},{name:"stake_net_quantity",type:"asset"},{name:"stake_cpu_quantity",type:"asset"},{name:"transfer",type:"bool"}]},{name:"delegated_bandwidth",base:"",fields:[{name:"from",type:"name"},{name:"to",type:"name"},{name:"net_weight",type:"asset"},{name:"cpu_weight",type:"asset"}]},{name:"deleteauth",base:"",fields:[{name:"account",type:"name"},{name:"permission",type:"name"}]},{name:"deposit",base:"",fields:[{name:"owner",type:"name"},{name:"amount",type:"asset"}]},{name:"eosio_global_state",base:"blockchain_parameters",fields:[{name:"max_ram_size",type:"uint64"},{name:"total_ram_bytes_reserved",type:"uint64"},{name:"total_ram_stake",type:"int64"},{name:"last_producer_schedule_update",type:"block_timestamp_type"},{name:"last_pervote_bucket_fill",type:"time_point"},{name:"pervote_bucket",type:"int64"},{name:"perblock_bucket",type:"int64"},{name:"total_unpaid_blocks",type:"uint32"},{name:"total_activated_stake",type:"int64"},{name:"thresh_activated_stake_time",type:"time_point"},{name:"last_producer_schedule_size",type:"uint16"},{name:"total_producer_vote_weight",type:"float64"},{name:"last_name_close",type:"block_timestamp_type"}]},{name:"eosio_global_state2",base:"",fields:[{name:"new_ram_per_block",type:"uint16"},{name:"last_ram_increase",type:"block_timestamp_type"},{name:"last_block_num",type:"block_timestamp_type"},{name:"total_producer_votepay_share",type:"float64"},{name:"revision",type:"uint8"}]},{name:"eosio_global_state3",base:"",fields:[{name:"last_vpay_state_update",type:"time_point"},{name:"total_vpay_share_change_rate",type:"float64"}]},{name:"eosio_global_state4",base:"",fields:[{name:"continuous_rate",type:"float64"},{name:"inflation_pay_factor",type:"int64"},{name:"votepay_factor",type:"int64"}]},{name:"exchange_state",base:"",fields:[{name:"supply",type:"asset"},{name:"base",type:"connector"},{name:"quote",type:"connector"}]},{name:"fundcpuloan",base:"",fields:[{name:"from",type:"name"},{name:"loan_num",type:"uint64"},{name:"payment",type:"asset"}]},{name:"fundnetloan",base:"",fields:[{name:"from",type:"name"},{name:"loan_num",type:"uint64"},{name:"payment",type:"asset"}]},{name:"init",base:"",fields:[{name:"version",type:"varuint32"},{name:"core",type:"symbol"}]},{name:"key_weight",base:"",fields:[{name:"key",type:"public_key"},{name:"weight",type:"uint16"}]},{name:"linkauth",base:"",fields:[{name:"account",type:"name"},{name:"code",type:"name"},{name:"type",type:"name"},{name:"requirement",type:"name"}]},{name:"mvfrsavings",base:"",fields:[{name:"owner",type:"name"},{name:"rex",type:"asset"}]},{name:"mvtosavings",base:"",fields:[{name:"owner",type:"name"},{name:"rex",type:"asset"}]},{name:"name_bid",base:"",fields:[{name:"newname",type:"name"},{name:"high_bidder",type:"name"},{name:"high_bid",type:"int64"},{name:"last_bid_time",type:"time_point"}]},{name:"newaccount",base:"",fields:[{name:"creator",type:"name"},{name:"name",type:"name"},{name:"owner",type:"authority"},{name:"active",type:"authority"}]},{name:"onblock",base:"",fields:[{name:"header",type:"block_header"}]},{name:"onerror",base:"",fields:[{name:"sender_id",type:"uint128"},{name:"sent_trx",type:"bytes"}]},{name:"pair_time_point_sec_int64",base:"",fields:[{name:"key",type:"time_point_sec"},{name:"value",type:"int64"}]},{name:"permission_level",base:"",fields:[{name:"actor",type:"name"},{name:"permission",type:"name"}]},{name:"permission_level_weight",base:"",fields:[{name:"permission",type:"permission_level"},{name:"weight",type:"uint16"}]},{name:"producer_info",base:"",fields:[{name:"owner",type:"name"},{name:"total_votes",type:"float64"},{name:"producer_key",type:"public_key"},{name:"is_active",type:"bool"},{name:"url",type:"string"},{name:"unpaid_blocks",type:"uint32"},{name:"last_claim_time",type:"time_point"},{name:"location",type:"uint16"},{name:"producer_authority",type:"block_signing_authority[]"}]},{name:"producer_info2",base:"",fields:[{name:"owner",type:"name"},{name:"votepay_share",type:"float64"},{name:"last_votepay_share_update",type:"time_point"}]},{name:"producer_key",base:"",fields:[{name:"producer_name",type:"name"},{name:"block_signing_key",type:"public_key"}]},{name:"producer_schedule",base:"",fields:[{name:"version",type:"uint32"},{name:"producers",type:"producer_key[]"}]},{name:"refund",base:"",fields:[{name:"owner",type:"name"}]},{name:"refund_request",base:"",fields:[{name:"owner",type:"name"},{name:"request_time",type:"time_point_sec"},{name:"net_amount",type:"asset"},{name:"cpu_amount",type:"asset"}]},{name:"regproducer",base:"",fields:[{name:"producer",type:"name"},{name:"producer_key",type:"public_key"},{name:"url",type:"string"},{name:"location",type:"uint16"}]},{name:"regproducer2",base:"",fields:[{name:"producer",type:"name"},{name:"producer_authority",type:"block_signing_authority"},{name:"url",type:"string"},{name:"location",type:"uint16"}]},{name:"regproxy",base:"",fields:[{name:"proxy",type:"name"},{name:"isproxy",type:"bool"}]},{name:"rentcpu",base:"",fields:[{name:"from",type:"name"},{name:"receiver",type:"name"},{name:"loan_payment",type:"asset"},{name:"loan_fund",type:"asset"}]},{name:"rentnet",base:"",fields:[{name:"from",type:"name"},{name:"receiver",type:"name"},{name:"loan_payment",type:"asset"},{name:"loan_fund",type:"asset"}]},{name:"rex_balance",base:"",fields:[{name:"version",type:"uint8"},{name:"owner",type:"name"},{name:"vote_stake",type:"asset"},{name:"rex_balance",type:"asset"},{name:"matured_rex",type:"int64"},{name:"rex_maturities",type:"pair_time_point_sec_int64[]"}]},{name:"rex_fund",base:"",fields:[{name:"version",type:"uint8"},{name:"owner",type:"name"},{name:"balance",type:"asset"}]},{name:"rex_loan",base:"",fields:[{name:"version",type:"uint8"},{name:"from",type:"name"},{name:"receiver",type:"name"},{name:"payment",type:"asset"},{name:"balance",type:"asset"},{name:"total_staked",type:"asset"},{name:"loan_num",type:"uint64"},{name:"expiration",type:"time_point"}]},{name:"rex_order",base:"",fields:[{name:"version",type:"uint8"},{name:"owner",type:"name"},{name:"rex_requested",type:"asset"},{name:"proceeds",type:"asset"},{name:"stake_change",type:"asset"},{name:"order_time",type:"time_point"},{name:"is_open",type:"bool"}]},{name:"rex_pool",base:"",fields:[{name:"version",type:"uint8"},{name:"total_lent",type:"asset"},{name:"total_unlent",type:"asset"},{name:"total_rent",type:"asset"},{name:"total_lendable",type:"asset"},{name:"total_rex",type:"asset"},{name:"namebid_proceeds",type:"asset"},{name:"loan_num",type:"uint64"}]},{name:"rex_return_buckets",base:"",fields:[{name:"version",type:"uint8"},{name:"return_buckets",type:"pair_time_point_sec_int64[]"}]},{name:"rex_return_pool",base:"",fields:[{name:"version",type:"uint8"},{name:"last_dist_time",type:"time_point_sec"},{name:"pending_bucket_time",type:"time_point_sec"},{name:"oldest_bucket_time",type:"time_point_sec"},{name:"pending_bucket_proceeds",type:"int64"},{name:"current_rate_of_increase",type:"int64"},{name:"proceeds",type:"int64"}]},{name:"rexexec",base:"",fields:[{name:"user",type:"name"},{name:"max",type:"uint16"}]},{name:"rmvproducer",base:"",fields:[{name:"producer",type:"name"}]},{name:"sellram",base:"",fields:[{name:"account",type:"name"},{name:"bytes",type:"int64"}]},{name:"sellrex",base:"",fields:[{name:"from",type:"name"},{name:"rex",type:"asset"}]},{name:"setabi",base:"",fields:[{name:"account",type:"name"},{name:"abi",type:"bytes"}]},{name:"setacctcpu",base:"",fields:[{name:"account",type:"name"},{name:"cpu_weight",type:"int64?"}]},{name:"setacctnet",base:"",fields:[{name:"account",type:"name"},{name:"net_weight",type:"int64?"}]},{name:"setacctram",base:"",fields:[{name:"account",type:"name"},{name:"ram_bytes",type:"int64?"}]},{name:"setalimits",base:"",fields:[{name:"account",type:"name"},{name:"ram_bytes",type:"int64"},{name:"net_weight",type:"int64"},{name:"cpu_weight",type:"int64"}]},{name:"setcode",base:"",fields:[{name:"account",type:"name"},{name:"vmtype",type:"uint8"},{name:"vmversion",type:"uint8"},{name:"code",type:"bytes"}]},{name:"setinflation",base:"",fields:[{name:"annual_rate",type:"int64"},{name:"inflation_pay_factor",type:"int64"},{name:"votepay_factor",type:"int64"}]},{name:"setparams",base:"",fields:[{name:"params",type:"blockchain_parameters"}]},{name:"setpriv",base:"",fields:[{name:"account",type:"name"},{name:"is_priv",type:"uint8"}]},{name:"setram",base:"",fields:[{name:"max_ram_size",type:"uint64"}]},{name:"setramrate",base:"",fields:[{name:"bytes_per_block",type:"uint16"}]},{name:"setrex",base:"",fields:[{name:"balance",type:"asset"}]},{name:"undelegatebw",base:"",fields:[{name:"from",type:"name"},{name:"receiver",type:"name"},{name:"unstake_net_quantity",type:"asset"},{name:"unstake_cpu_quantity",type:"asset"}]},{name:"unlinkauth",base:"",fields:[{name:"account",type:"name"},{name:"code",type:"name"},{name:"type",type:"name"}]},{name:"unregprod",base:"",fields:[{name:"producer",type:"name"}]},{name:"unstaketorex",base:"",fields:[{name:"owner",type:"name"},{name:"receiver",type:"name"},{name:"from_net",type:"asset"},{name:"from_cpu",type:"asset"}]},{name:"updateauth",base:"",fields:[{name:"account",type:"name"},{name:"permission",type:"name"},{name:"parent",type:"name"},{name:"auth",type:"authority"}]},{name:"updaterex",base:"",fields:[{name:"owner",type:"name"}]},{name:"updtrevision",base:"",fields:[{name:"revision",type:"uint8"}]},{name:"user_resources",base:"",fields:[{name:"owner",type:"name"},{name:"net_weight",type:"asset"},{name:"cpu_weight",type:"asset"},{name:"ram_bytes",type:"int64"}]},{name:"voteproducer",base:"",fields:[{name:"voter",type:"name"},{name:"proxy",type:"name"},{name:"producers",type:"name[]"}]},{name:"voter_info",base:"",fields:[{name:"owner",type:"name"},{name:"proxy",type:"name"},{name:"producers",type:"name[]"},{name:"staked",type:"int64"},{name:"last_vote_weight",type:"float64"},{name:"proxied_vote_weight",type:"float64"},{name:"is_proxy",type:"bool"},{name:"flags1",type:"uint32"},{name:"reserved2",type:"uint32"},{name:"reserved3",type:"asset"}]},{name:"wait_weight",base:"",fields:[{name:"wait_sec",type:"uint32"},{name:"weight",type:"uint16"}]},{name:"withdraw",base:"",fields:[{name:"owner",type:"name"},{name:"amount",type:"asset"}]}],actions:[{name:"activate",type:"activate",ricardian_contract:"---\nspec_version: \"0.2.0\"\ntitle: Activate Protocol Feature\nsummary: 'Activate protocol feature {{nowrap feature_digest}}'\nicon: http://127.0.0.1/ricardian_assets/eosio.contracts/icons/admin.png#9bf1cec664863bd6aaac0f814b235f8799fb02c850e9aa5da34e8a004bd6518e\n---\n\n{{$action.account}} activates the protocol feature with a digest of {{feature_digest}}."},{name:"bidname",type:"bidname",ricardian_contract:"---\nspec_version: \"0.2.0\"\ntitle: Bid On a Premium Account Name\nsummary: '{{nowrap bidder}} bids on the premium account name {{nowrap newname}}'\nicon: http://127.0.0.1/ricardian_assets/eosio.contracts/icons/account.png#3d55a2fc3a5c20b456f5657faf666bc25ffd06f4836c5e8256f741149b0b294f\n---\n\n{{bidder}} bids {{bid}} on an auction to own the premium account name {{newname}}.\n\n{{bidder}} transfers {{bid}} to the system to cover the cost of the bid, which will be returned to {{bidder}} only if {{bidder}} is later outbid in the auction for {{newname}} by another account.\n\nIf the auction for {{newname}} closes with {{bidder}} remaining as the highest bidder, {{bidder}} will be authorized to create the account with name {{newname}}.\n\n## Bid refund behavior\n\nIf {{bidder}}’s bid on {{newname}} is later outbid by another account, {{bidder}} will be able to claim back the transferred amount of {{bid}}. The system will attempt to automatically do this on behalf of {{bidder}}, but the automatic refund may occasionally fail which will then require {{bidder}} to manually claim the refund with the bidrefund action.\n\n## Auction close criteria\n\nThe system should automatically close the auction for {{newname}} if it satisfies the condition that over a period of two minutes the following two properties continuously hold:\n\n- no one has bid on {{newname}} within the last 24 hours;\n- and, the value of the latest bid on {{newname}} is greater than the value of the bids on each of the other open auctions.\n\nBe aware that the condition to close the auction described above are sufficient but not necessary. The auction for {{newname}} cannot close unless both of the properties are simultaneously satisfied, but it may be closed without requiring the properties to hold for a period of 2 minutes."},{name:"bidrefund",type:"bidrefund",ricardian_contract:"---\nspec_version: \"0.2.0\"\ntitle: Claim Refund on Name Bid\nsummary: 'Claim refund on {{nowrap newname}} bid'\nicon: http://127.0.0.1/ricardian_assets/eosio.contracts/icons/account.png#3d55a2fc3a5c20b456f5657faf666bc25ffd06f4836c5e8256f741149b0b294f\n---\n\n{{bidder}} claims refund on {{newname}} bid after being outbid by someone else."},{name:"buyram",type:"buyram",ricardian_contract:"---\nspec_version: \"0.2.0\"\ntitle: Buy RAM\nsummary: '{{nowrap payer}} buys RAM on behalf of {{nowrap receiver}} by paying {{nowrap quant}}'\nicon: http://127.0.0.1/ricardian_assets/eosio.contracts/icons/resource.png#3830f1ce8cb07f7757dbcf383b1ec1b11914ac34a1f9d8b065f07600fa9dac19\n---\n\n{{payer}} buys RAM on behalf of {{receiver}} by paying {{quant}}. This transaction will incur a 0.5% fee out of {{quant}} and the amount of RAM delivered will depend on market rates."},{name:"buyrambytes",type:"buyrambytes",ricardian_contract:"---\nspec_version: \"0.2.0\"\ntitle: Buy RAM\nsummary: '{{nowrap payer}} buys {{nowrap bytes}} bytes of RAM on behalf of {{nowrap receiver}}'\nicon: http://127.0.0.1/ricardian_assets/eosio.contracts/icons/resource.png#3830f1ce8cb07f7757dbcf383b1ec1b11914ac34a1f9d8b065f07600fa9dac19\n---\n\n{{payer}} buys approximately {{bytes}} bytes of RAM on behalf of {{receiver}} by paying market rates for RAM. This transaction will incur a 0.5% fee and the cost will depend on market rates."},{name:"buyrex",type:"buyrex",ricardian_contract:"---\nspec_version: \"0.2.0\"\ntitle: Buy REX Tokens\nsummary: '{{nowrap from}} buys REX tokens in exchange for {{nowrap amount}} and their vote stake increases by {{nowrap amount}}'\nicon: http://127.0.0.1/ricardian_assets/eosio.contracts/icons/rex.png#d229837fa62a464b9c71e06060aa86179adf0b3f4e3b8c4f9702f4f4b0c340a8\n---\n\n{{amount}} is taken out of {{from}}’s REX fund and used to purchase REX tokens at the current market exchange rate. In order for the action to succeed, {{from}} must have voted for a proxy or at least 21 block producers. {{amount}} is added to {{from}}’s vote stake.\n\nA sell order of the purchased amount can only be initiated after waiting for the maturity period of 4 to 5 days to pass. Even then, depending on the market conditions, the initiated sell order may not be executed immediately."},{name:"canceldelay",type:"canceldelay",ricardian_contract:"---\nspec_version: \"0.2.0\"\ntitle: Cancel Delayed Transaction\nsummary: '{{nowrap canceling_auth.actor}} cancels a delayed transaction'\nicon: http://127.0.0.1/ricardian_assets/eosio.contracts/icons/account.png#3d55a2fc3a5c20b456f5657faf666bc25ffd06f4836c5e8256f741149b0b294f\n---\n\n{{canceling_auth.actor}} cancels the delayed transaction with id {{trx_id}}."},{name:"claimrewards",type:"claimrewards",ricardian_contract:"---\nspec_version: \"0.2.0\"\ntitle: Claim Block Producer Rewards\nsummary: '{{nowrap owner}} claims block and vote rewards'\nicon: http://127.0.0.1/ricardian_assets/eosio.contracts/icons/admin.png#9bf1cec664863bd6aaac0f814b235f8799fb02c850e9aa5da34e8a004bd6518e\n---\n\n{{owner}} claims block and vote rewards from the system."},{name:"closerex",type:"closerex",ricardian_contract:"---\nspec_version: \"0.2.0\"\ntitle: Cleanup Unused REX Data\nsummary: 'Delete REX related DB entries and free associated RAM'\nicon: http://127.0.0.1/ricardian_assets/eosio.contracts/icons/rex.png#d229837fa62a464b9c71e06060aa86179adf0b3f4e3b8c4f9702f4f4b0c340a8\n---\n\nDelete REX related DB entries and free associated RAM for {{owner}}.\n\nTo fully delete all REX related DB entries, {{owner}} must ensure that their REX balance and REX fund amounts are both zero and they have no outstanding loans."},{name:"cnclrexorder",type:"cnclrexorder",ricardian_contract:"---\nspec_version: \"0.2.0\"\ntitle: Cancel Scheduled REX Sell Order\nsummary: '{{nowrap owner}} cancels a scheduled sell order if not yet filled'\nicon: http://127.0.0.1/ricardian_assets/eosio.contracts/icons/rex.png#d229837fa62a464b9c71e06060aa86179adf0b3f4e3b8c4f9702f4f4b0c340a8\n---\n\n{{owner}} cancels their open sell order."},{name:"consolidate",type:"consolidate",ricardian_contract:"---\nspec_version: \"0.2.0\"\ntitle: Consolidate REX Maturity Buckets Into One\nsummary: 'Consolidate REX maturity buckets into one'\nicon: http://127.0.0.1/ricardian_assets/eosio.contracts/icons/rex.png#d229837fa62a464b9c71e06060aa86179adf0b3f4e3b8c4f9702f4f4b0c340a8\n---\n\nConsolidate REX maturity buckets into one bucket that {{owner}} will not be able to sell until 4 to 5 days later."},{name:"defcpuloan",type:"defcpuloan",ricardian_contract:"---\nspec_version: \"0.2.0\"\ntitle: Withdraw from the Fund of a Specific CPU Loan\nsummary: '{{nowrap from}} transfers {{nowrap amount}} from the fund of CPU loan number {{nowrap loan_num}} back to REX fund'\nicon: http://127.0.0.1/ricardian_assets/eosio.contracts/icons/rex.png#d229837fa62a464b9c71e06060aa86179adf0b3f4e3b8c4f9702f4f4b0c340a8\n---\n\n{{from}} transfers {{amount}} from the fund of CPU loan number {{loan_num}} back to REX fund."},{name:"defnetloan",type:"defnetloan",ricardian_contract:"---\nspec_version: \"0.2.0\"\ntitle: Withdraw from the Fund of a Specific NET Loan\nsummary: '{{nowrap from}} transfers {{nowrap amount}} from the fund of NET loan number {{nowrap loan_num}} back to REX fund'\nicon: http://127.0.0.1/ricardian_assets/eosio.contracts/icons/rex.png#d229837fa62a464b9c71e06060aa86179adf0b3f4e3b8c4f9702f4f4b0c340a8\n---\n\n{{from}} transfers {{amount}} from the fund of NET loan number {{loan_num}} back to REX fund."},{name:"delegatebw",type:"delegatebw",ricardian_contract:"---\nspec_version: \"0.2.0\"\ntitle: Stake Tokens for NET and/or CPU\nsummary: 'Stake tokens for NET and/or CPU and optionally transfer ownership'\nicon: http://127.0.0.1/ricardian_assets/eosio.contracts/icons/resource.png#3830f1ce8cb07f7757dbcf383b1ec1b11914ac34a1f9d8b065f07600fa9dac19\n---\n\n{{#if transfer}} {{from}} stakes on behalf of {{receiver}} {{stake_net_quantity}} for NET bandwidth and {{stake_cpu_quantity}} for CPU bandwidth.\n\nStaked tokens will also be transferred to {{receiver}}. The sum of these two quantities will be deducted from {{from}}’s liquid balance and add to the vote weight of {{receiver}}.\n{{else}}\n{{from}} stakes to self and delegates to {{receiver}} {{stake_net_quantity}} for NET bandwidth and {{stake_cpu_quantity}} for CPU bandwidth.\n\nThe sum of these two quantities add to the vote weight of {{from}}.\n{{/if}}"},{name:"deleteauth",type:"deleteauth",ricardian_contract:"---\nspec_version: \"0.2.0\"\ntitle: Delete Account Permission\nsummary: 'Delete the {{nowrap permission}} permission of {{nowrap account}}'\nicon: http://127.0.0.1/ricardian_assets/eosio.contracts/icons/account.png#3d55a2fc3a5c20b456f5657faf666bc25ffd06f4836c5e8256f741149b0b294f\n---\n\nDelete the {{permission}} permission of {{account}}."},{name:"deposit",type:"deposit",ricardian_contract:"---\nspec_version: \"0.2.0\"\ntitle: Deposit Into REX Fund\nsummary: 'Add to {{nowrap owner}}’s REX fund by transferring {{nowrap amount}} from {{nowrap owner}}’s liquid balance'\nicon: http://127.0.0.1/ricardian_assets/eosio.contracts/icons/rex.png#d229837fa62a464b9c71e06060aa86179adf0b3f4e3b8c4f9702f4f4b0c340a8\n---\n\nTransfer {{amount}} from {{owner}}’s liquid balance to {{owner}}’s REX fund. All proceeds and expenses related to REX are added to or taken out of this fund."},{name:"fundcpuloan",type:"fundcpuloan",ricardian_contract:"---\nspec_version: \"0.2.0\"\ntitle: Deposit into the Fund of a Specific CPU Loan\nsummary: '{{nowrap from}} funds a CPU loan'\nicon: http://127.0.0.1/ricardian_assets/eosio.contracts/icons/rex.png#d229837fa62a464b9c71e06060aa86179adf0b3f4e3b8c4f9702f4f4b0c340a8\n---\n\n{{from}} transfers {{payment}} from REX fund to the fund of CPU loan number {{loan_num}} in order to be used in loan renewal at expiry. {{from}} can withdraw the total balance of the loan fund at any time."},{name:"fundnetloan",type:"fundnetloan",ricardian_contract:"---\nspec_version: \"0.2.0\"\ntitle: Deposit into the Fund of a Specific NET Loan\nsummary: '{{nowrap from}} funds a NET loan'\nicon: http://127.0.0.1/ricardian_assets/eosio.contracts/icons/rex.png#d229837fa62a464b9c71e06060aa86179adf0b3f4e3b8c4f9702f4f4b0c340a8\n---\n\n{{from}} transfers {{payment}} from REX fund to the fund of NET loan number {{loan_num}} in order to be used in loan renewal at expiry. {{from}} can withdraw the total balance of the loan fund at any time."},{name:"init",type:"init",ricardian_contract:"---\nspec_version: \"0.2.0\"\ntitle: Initialize System Contract\nsummary: 'Initialize system contract'\nicon: http://127.0.0.1/ricardian_assets/eosio.contracts/icons/admin.png#9bf1cec664863bd6aaac0f814b235f8799fb02c850e9aa5da34e8a004bd6518e\n---\n\nInitialize system contract. The core token symbol will be set to {{core}}."},{name:"linkauth",type:"linkauth",ricardian_contract:"---\nspec_version: \"0.2.0\"\ntitle: Link Action to Permission\nsummary: '{{nowrap account}} sets the minimum required permission for the {{#if type}}{{nowrap type}} action of the{{/if}} {{nowrap code}} contract to {{nowrap requirement}}'\nicon: http://127.0.0.1/ricardian_assets/eosio.contracts/icons/account.png#3d55a2fc3a5c20b456f5657faf666bc25ffd06f4836c5e8256f741149b0b294f\n---\n\n{{account}} sets the minimum required permission for the {{#if type}}{{type}} action of the{{/if}} {{code}} contract to {{requirement}}.\n\n{{#if type}}{{else}}Any links explicitly associated to specific actions of {{code}} will take precedence.{{/if}}"},{name:"mvfrsavings",type:"mvfrsavings",ricardian_contract:"---\nspec_version: \"0.2.0\"\ntitle: Unlock REX Tokens\nsummary: '{{nowrap owner}} unlocks REX Tokens'\nicon: http://127.0.0.1/ricardian_assets/eosio.contracts/icons/rex.png#d229837fa62a464b9c71e06060aa86179adf0b3f4e3b8c4f9702f4f4b0c340a8\n---\n\n{{owner}} unlocks {{rex}} by moving it out of the REX savings bucket. The unlocked REX tokens cannot be sold until 4 to 5 days later."},{name:"mvtosavings",type:"mvtosavings",ricardian_contract:"---\nspec_version: \"0.2.0\"\ntitle: Lock REX Tokens\nsummary: '{{nowrap owner}} locks REX Tokens'\nicon: http://127.0.0.1/ricardian_assets/eosio.contracts/icons/rex.png#d229837fa62a464b9c71e06060aa86179adf0b3f4e3b8c4f9702f4f4b0c340a8\n---\n\n{{owner}} locks {{rex}} by moving it into the REX savings bucket. The locked REX tokens cannot be sold directly and will have to be unlocked explicitly before selling."},{name:"newaccount",type:"newaccount",ricardian_contract:"---\nspec_version: \"0.2.0\"\ntitle: Create New Account\nsummary: '{{nowrap creator}} creates a new account with the name {{nowrap name}}'\nicon: http://127.0.0.1/ricardian_assets/eosio.contracts/icons/account.png#3d55a2fc3a5c20b456f5657faf666bc25ffd06f4836c5e8256f741149b0b294f\n---\n\n{{creator}} creates a new account with the name {{name}} and the following permissions:\n\nowner permission with authority:\n{{to_json owner}}\n\nactive permission with authority:\n{{to_json active}}"},{name:"onblock",type:"onblock",ricardian_contract:""},{name:"onerror",type:"onerror",ricardian_contract:""},{name:"refund",type:"refund",ricardian_contract:"---\nspec_version: \"0.2.0\"\ntitle: Claim Unstaked Tokens\nsummary: 'Return previously unstaked tokens to {{nowrap owner}}'\nicon: http://127.0.0.1/ricardian_assets/eosio.contracts/icons/account.png#3d55a2fc3a5c20b456f5657faf666bc25ffd06f4836c5e8256f741149b0b294f\n---\n\nReturn previously unstaked tokens to {{owner}} after the unstaking period has elapsed."},{name:"regproducer",type:"regproducer",ricardian_contract:"---\nspec_version: \"0.2.0\"\ntitle: Register as a Block Producer Candidate\nsummary: 'Register {{nowrap producer}} account as a block producer candidate'\nicon: http://127.0.0.1/ricardian_assets/eosio.contracts/icons/voting.png#db28cd3db6e62d4509af3644ce7d377329482a14bb4bfaca2aa5f1400d8e8a84\n---\n\nRegister {{producer}} account as a block producer candidate.\n\nURL: {{url}}\nLocation code: {{location}}\nBlock signing key: {{producer_key}}\n\n## Block Producer Agreement\n{{$clauses.BlockProducerAgreement}}"},{name:"regproducer2",type:"regproducer2",ricardian_contract:"---\nspec_version: \"0.2.0\"\ntitle: Register as a Block Producer Candidate\nsummary: 'Register {{nowrap producer}} account as a block producer candidate'\nicon: http://127.0.0.1/ricardian_assets/eosio.contracts/icons/voting.png#db28cd3db6e62d4509af3644ce7d377329482a14bb4bfaca2aa5f1400d8e8a84\n---\n\nRegister {{producer}} account as a block producer candidate.\n\nURL: {{url}}\nLocation code: {{location}}\nBlock signing authority:\n{{to_json producer_authority}}\n\n## Block Producer Agreement\n{{$clauses.BlockProducerAgreement}}"},{name:"regproxy",type:"regproxy",ricardian_contract:"---\nspec_version: \"0.2.0\"\ntitle: Register/unregister as a Proxy\nsummary: 'Register/unregister {{nowrap proxy}} as a proxy account'\nicon: http://127.0.0.1/ricardian_assets/eosio.contracts/icons/voting.png#db28cd3db6e62d4509af3644ce7d377329482a14bb4bfaca2aa5f1400d8e8a84\n---\n\n{{#if isproxy}}\n{{proxy}} registers as a proxy that can vote on behalf of accounts that appoint it as their proxy.\n{{else}}\n{{proxy}} unregisters as a proxy that can vote on behalf of accounts that appoint it as their proxy.\n{{/if}}"},{name:"rentcpu",type:"rentcpu",ricardian_contract:"---\nspec_version: \"0.2.0\"\ntitle: Rent CPU Bandwidth for 30 Days\nsummary: '{{nowrap from}} pays {{nowrap loan_payment}} to rent CPU bandwidth for {{nowrap receiver}}'\nicon: http://127.0.0.1/ricardian_assets/eosio.contracts/icons/rex.png#d229837fa62a464b9c71e06060aa86179adf0b3f4e3b8c4f9702f4f4b0c340a8\n---\n\n{{from}} pays {{loan_payment}} to rent CPU bandwidth on behalf of {{receiver}} for a period of 30 days.\n\n{{loan_payment}} is taken out of {{from}}’s REX fund. The market price determines the number of tokens to be staked to {{receiver}}’s CPU resources. In addition, {{from}} provides {{loan_fund}}, which is also taken out of {{from}}’s REX fund, to be used for automatic renewal of the loan.\n\nAt expiration, if the loan has less funds than {{loan_payment}}, it is closed and lent tokens that have been staked are taken out of {{receiver}}’s CPU bandwidth. Otherwise, it is renewed at the market price at the time of renewal, that is, the number of staked tokens is recalculated and {{receiver}}’s CPU bandwidth is updated accordingly. {{from}} can fund or defund a loan at any time before expiration. When the loan is closed, {{from}} is refunded any tokens remaining in the loan fund."},{name:"rentnet",type:"rentnet",ricardian_contract:"---\nspec_version: \"0.2.0\"\ntitle: Rent NET Bandwidth for 30 Days\nsummary: '{{nowrap from}} pays {{nowrap loan_payment}} to rent NET bandwidth for {{nowrap receiver}}'\nicon: http://127.0.0.1/ricardian_assets/eosio.contracts/icons/rex.png#d229837fa62a464b9c71e06060aa86179adf0b3f4e3b8c4f9702f4f4b0c340a8\n---\n\n{{from}} pays {{loan_payment}} to rent NET bandwidth on behalf of {{receiver}} for a period of 30 days.\n\n{{loan_payment}} is taken out of {{from}}’s REX fund. The market price determines the number of tokens to be staked to {{receiver}}’s NET resources for 30 days. In addition, {{from}} provides {{loan_fund}}, which is also taken out of {{from}}’s REX fund, to be used for automatic renewal of the loan.\n\nAt expiration, if the loan has less funds than {{loan_payment}}, it is closed and lent tokens that have been staked are taken out of {{receiver}}’s NET bandwidth. Otherwise, it is renewed at the market price at the time of renewal, that is, the number of staked tokens is recalculated and {{receiver}}’s NET bandwidth is updated accordingly. {{from}} can fund or defund a loan at any time before expiration. When the loan is closed, {{from}} is refunded any tokens remaining in the loan fund."},{name:"rexexec",type:"rexexec",ricardian_contract:"---\nspec_version: \"0.2.0\"\ntitle: Perform REX Maintenance\nsummary: 'Process sell orders and expired loans'\nicon: http://127.0.0.1/ricardian_assets/eosio.contracts/icons/rex.png#d229837fa62a464b9c71e06060aa86179adf0b3f4e3b8c4f9702f4f4b0c340a8\n---\n\nPerforms REX maintenance by processing a maximum of {{max}} REX sell orders and expired loans. Any account can execute this action."},{name:"rmvproducer",type:"rmvproducer",ricardian_contract:"---\nspec_version: \"0.2.0\"\ntitle: Forcibly Unregister a Block Producer Candidate\nsummary: '{{nowrap producer}} is unregistered as a block producer candidate'\nicon: http://127.0.0.1/ricardian_assets/eosio.contracts/icons/admin.png#9bf1cec664863bd6aaac0f814b235f8799fb02c850e9aa5da34e8a004bd6518e\n---\n\n{{$action.account}} unregisters {{producer}} as a block producer candidate. {{producer}} account will retain its votes and those votes can change based on voter stake changes or votes removed from {{producer}}. However new voters will not be able to vote for {{producer}} while it remains unregistered."},{name:"sellram",type:"sellram",ricardian_contract:"---\nspec_version: \"0.2.0\"\ntitle: Sell RAM From Account\nsummary: 'Sell unused RAM from {{nowrap account}}'\nicon: http://127.0.0.1/ricardian_assets/eosio.contracts/icons/resource.png#3830f1ce8cb07f7757dbcf383b1ec1b11914ac34a1f9d8b065f07600fa9dac19\n---\n\nSell {{bytes}} bytes of unused RAM from account {{account}} at market price. This transaction will incur a 0.5% fee on the proceeds which depend on market rates."},{name:"sellrex",type:"sellrex",ricardian_contract:"---\nspec_version: \"0.2.0\"\ntitle: Sell REX Tokens in Exchange for EOS\nsummary: '{{nowrap from}} sells {{nowrap rex}} tokens'\nicon: http://127.0.0.1/ricardian_assets/eosio.contracts/icons/rex.png#d229837fa62a464b9c71e06060aa86179adf0b3f4e3b8c4f9702f4f4b0c340a8\n---\n\n{{from}} initiates a sell order to sell {{rex}} tokens at the market exchange rate during the time at which the order is ultimately executed. If {{from}} already has an open sell order in the sell queue, {{rex}} will be added to the amount of the sell order without change the position of the sell order within the queue. Once the sell order is executed, proceeds are added to {{from}}’s REX fund, the value of sold REX tokens is deducted from {{from}}’s vote stake, and votes are updated accordingly.\n\nDepending on the market conditions, it may not be possible to fill the entire sell order immediately. In such a case, the sell order is added to the back of a sell queue. A sell order at the front of the sell queue will automatically be executed when the market conditions allow for the entire order to be filled. Regardless of the market conditions, the system is designed to execute this sell order within 30 days. {{from}} can cancel the order at any time before it is filled using the cnclrexorder action."},{name:"setabi",type:"setabi",ricardian_contract:"---\nspec_version: \"0.2.0\"\ntitle: Deploy Contract ABI\nsummary: 'Deploy contract ABI on account {{nowrap account}}'\nicon: http://127.0.0.1/ricardian_assets/eosio.contracts/icons/account.png#3d55a2fc3a5c20b456f5657faf666bc25ffd06f4836c5e8256f741149b0b294f\n---\n\nDeploy the ABI file associated with the contract on account {{account}}."},{name:"setacctcpu",type:"setacctcpu",ricardian_contract:"---\nspec_version: \"0.2.0\"\ntitle: Explicitly Manage the CPU Quota of Account\nsummary: 'Explicitly manage the CPU bandwidth quota of account {{nowrap account}}'\nicon: http://127.0.0.1/ricardian_assets/eosio.contracts/icons/admin.png#9bf1cec664863bd6aaac0f814b235f8799fb02c850e9aa5da34e8a004bd6518e\n---\n\n{{#if_has_value cpu_weight}}\nExplicitly manage the CPU bandwidth quota of account {{account}} by pinning it to a weight of {{cpu_weight}}.\n\n{{account}} can stake and unstake, however, it will not change their CPU bandwidth quota as long as it remains pinned.\n{{else}}\nUnpin the CPU bandwidth quota of account {{account}}. The CPU bandwidth quota of {{account}} will be driven by the current tokens staked for CPU bandwidth by {{account}}.\n{{/if_has_value}}"},{name:"setacctnet",type:"setacctnet",ricardian_contract:"---\nspec_version: \"0.2.0\"\ntitle: Explicitly Manage the NET Quota of Account\nsummary: 'Explicitly manage the NET bandwidth quota of account {{nowrap account}}'\nicon: http://127.0.0.1/ricardian_assets/eosio.contracts/icons/admin.png#9bf1cec664863bd6aaac0f814b235f8799fb02c850e9aa5da34e8a004bd6518e\n---\n\n{{#if_has_value net_weight}}\nExplicitly manage the network bandwidth quota of account {{account}} by pinning it to a weight of {{net_weight}}.\n\n{{account}} can stake and unstake, however, it will not change their NET bandwidth quota as long as it remains pinned.\n{{else}}\nUnpin the NET bandwidth quota of account {{account}}. The NET bandwidth quota of {{account}} will be driven by the current tokens staked for NET bandwidth by {{account}}.\n{{/if_has_value}}"},{name:"setacctram",type:"setacctram",ricardian_contract:"---\nspec_version: \"0.2.0\"\ntitle: Explicitly Manage the RAM Quota of Account\nsummary: 'Explicitly manage the RAM quota of account {{nowrap account}}'\nicon: http://127.0.0.1/ricardian_assets/eosio.contracts/icons/admin.png#9bf1cec664863bd6aaac0f814b235f8799fb02c850e9aa5da34e8a004bd6518e\n---\n\n{{#if_has_value ram_bytes}}\nExplicitly manage the RAM quota of account {{account}} by pinning it to {{ram_bytes}} bytes.\n\n{{account}} can buy and sell RAM, however, it will not change their RAM quota as long as it remains pinned.\n{{else}}\nUnpin the RAM quota of account {{account}}. The RAM quota of {{account}} will be driven by the current RAM holdings of {{account}}.\n{{/if_has_value}}"},{name:"setalimits",type:"setalimits",ricardian_contract:"---\nspec_version: \"0.2.0\"\ntitle: Adjust Resource Limits of Account\nsummary: 'Adjust resource limits of account {{nowrap account}}'\nicon: http://127.0.0.1/ricardian_assets/eosio.contracts/icons/admin.png#9bf1cec664863bd6aaac0f814b235f8799fb02c850e9aa5da34e8a004bd6518e\n---\n\n{{$action.account}} updates {{account}}’s resource limits to have a RAM quota of {{ram_bytes}} bytes, a NET bandwidth quota of {{net_weight}} and a CPU bandwidth quota of {{cpu_weight}}."},{name:"setcode",type:"setcode",ricardian_contract:"---\nspec_version: \"0.2.0\"\ntitle: Deploy Contract Code\nsummary: 'Deploy contract code on account {{nowrap account}}'\nicon: http://127.0.0.1/ricardian_assets/eosio.contracts/icons/account.png#3d55a2fc3a5c20b456f5657faf666bc25ffd06f4836c5e8256f741149b0b294f\n---\n\nDeploy compiled contract code to the account {{account}}."},{name:"setinflation",type:"setinflation",ricardian_contract:"---\nspec_version: \"0.2.0\"\ntitle: Set Inflation Parameters\nsummary: 'Set inflation parameters'\nicon: http://127.0.0.1/ricardian_assets/eosio.contracts/icons/admin.png#9bf1cec664863bd6aaac0f814b235f8799fb02c850e9aa5da34e8a004bd6518e\n---\n\n{{$action.account}} sets the inflation parameters as follows:\n\n* Annual inflation rate (in units of a hundredth of a percent): {{annual_rate}}\n* Fraction of inflation used to reward block producers: 10000/{{inflation_pay_factor}}\n* Fraction of block producer rewards to be distributed proportional to blocks produced: 10000/{{votepay_factor}}"},{name:"setparams",type:"setparams",ricardian_contract:"---\nspec_version: \"0.2.0\"\ntitle: Set System Parameters\nsummary: 'Set System Parameters'\nicon: http://127.0.0.1/ricardian_assets/eosio.contracts/icons/admin.png#9bf1cec664863bd6aaac0f814b235f8799fb02c850e9aa5da34e8a004bd6518e\n---\n\n{{$action.account}} sets system parameters to:\n{{to_json params}}"},{name:"setpriv",type:"setpriv",ricardian_contract:"---\nspec_version: \"0.2.0\"\ntitle: Make an Account Privileged or Unprivileged\nsummary: '{{#if is_priv}}Make {{nowrap account}} privileged{{else}}Remove privileged status of {{nowrap account}}{{/if}}'\nicon: http://127.0.0.1/ricardian_assets/eosio.contracts/icons/admin.png#9bf1cec664863bd6aaac0f814b235f8799fb02c850e9aa5da34e8a004bd6518e\n---\n\n{{#if is_priv}}\n{{$action.account}} makes {{account}} privileged.\n{{else}}\n{{$action.account}} removes privileged status of {{account}}.\n{{/if}}"},{name:"setram",type:"setram",ricardian_contract:"---\nspec_version: \"0.2.0\"\ntitle: Configure the Available RAM\nsummary: 'Configure the available RAM'\nicon: http://127.0.0.1/ricardian_assets/eosio.contracts/icons/admin.png#9bf1cec664863bd6aaac0f814b235f8799fb02c850e9aa5da34e8a004bd6518e\n---\n\n{{$action.account}} configures the available RAM to {{max_ram_size}} bytes."},{name:"setramrate",type:"setramrate",ricardian_contract:"---\nspec_version: \"0.2.0\"\ntitle: Set the Rate of Increase of RAM\nsummary: 'Set the rate of increase of RAM per block'\nicon: http://127.0.0.1/ricardian_assets/eosio.contracts/icons/admin.png#9bf1cec664863bd6aaac0f814b235f8799fb02c850e9aa5da34e8a004bd6518e\n---\n\n{{$action.account}} sets the rate of increase of RAM to {{bytes_per_block}} bytes/block."},{name:"setrex",type:"setrex",ricardian_contract:"---\nspec_version: \"0.2.0\"\ntitle: Adjust REX Pool Virtual Balance\nsummary: 'Adjust REX Pool Virtual Balance'\nicon: http://127.0.0.1/ricardian_assets/eosio.contracts/icons/admin.png#9bf1cec664863bd6aaac0f814b235f8799fb02c850e9aa5da34e8a004bd6518e\n---\n\n{{$action.account}} adjusts REX loan rate by setting REX pool virtual balance to {{balance}}. No token transfer or issue is executed in this action."},{name:"undelegatebw",type:"undelegatebw",ricardian_contract:"---\nspec_version: \"0.2.0\"\ntitle: Unstake Tokens for NET and/or CPU\nsummary: 'Unstake tokens for NET and/or CPU from {{nowrap receiver}}'\nicon: http://127.0.0.1/ricardian_assets/eosio.contracts/icons/resource.png#3830f1ce8cb07f7757dbcf383b1ec1b11914ac34a1f9d8b065f07600fa9dac19\n---\n\n{{from}} unstakes from {{receiver}} {{unstake_net_quantity}} for NET bandwidth and {{unstake_cpu_quantity}} for CPU bandwidth.\n\nThe sum of these two quantities will be removed from the vote weight of {{receiver}} and will be made available to {{from}} after an uninterrupted 3 day period without further unstaking by {{from}}. After the uninterrupted 3 day period passes, the system will attempt to automatically return the funds to {{from}}’s regular token balance. However, this automatic refund may occasionally fail which will then require {{from}} to manually claim the funds with the refund action."},{name:"unlinkauth",type:"unlinkauth",ricardian_contract:"---\nspec_version: \"0.2.0\"\ntitle: Unlink Action from Permission\nsummary: '{{nowrap account}} unsets the minimum required permission for the {{#if type}}{{nowrap type}} action of the{{/if}} {{nowrap code}} contract'\nicon: http://127.0.0.1/ricardian_assets/eosio.contracts/icons/account.png#3d55a2fc3a5c20b456f5657faf666bc25ffd06f4836c5e8256f741149b0b294f\n---\n\n{{account}} removes the association between the {{#if type}}{{type}} action of the{{/if}} {{code}} contract and its minimum required permission.\n\n{{#if type}}{{else}}This will not remove any links explicitly associated to specific actions of {{code}}.{{/if}}"},{name:"unregprod",type:"unregprod",ricardian_contract:"---\nspec_version: \"0.2.0\"\ntitle: Unregister as a Block Producer Candidate\nsummary: '{{nowrap producer}} unregisters as a block producer candidate'\nicon: http://127.0.0.1/ricardian_assets/eosio.contracts/icons/voting.png#db28cd3db6e62d4509af3644ce7d377329482a14bb4bfaca2aa5f1400d8e8a84\n---\n\n{{producer}} unregisters as a block producer candidate. {{producer}} account will retain its votes and those votes can change based on voter stake changes or votes removed from {{producer}}. However new voters will not be able to vote for {{producer}} while it remains unregistered."},{name:"unstaketorex",type:"unstaketorex",ricardian_contract:"---\nspec_version: \"0.2.0\"\ntitle: Buy REX Tokens Using Staked Tokens\nsummary: '{{nowrap owner}} buys REX tokens in exchange for tokens currently staked to NET and/or CPU'\nicon: http://127.0.0.1/ricardian_assets/eosio.contracts/icons/rex.png#d229837fa62a464b9c71e06060aa86179adf0b3f4e3b8c4f9702f4f4b0c340a8\n---\n\n{{from_net}} and {{from_cpu}} are withdrawn from {{receiver}}’s NET and CPU bandwidths respectively. These funds are used to purchase REX tokens at the current market exchange rate. In order for the action to succeed, {{owner}} must have voted for a proxy or at least 21 block producers.\n\nA sell order of the purchased amount can only be initiated after waiting for the maturity period of 4 to 5 days to pass. Even then, depending on the market conditions, the initiated sell order may not be executed immediately."},{name:"updateauth",type:"updateauth",ricardian_contract:"---\nspec_version: \"0.2.0\"\ntitle: Modify Account Permission\nsummary: 'Add or update the {{nowrap permission}} permission of {{nowrap account}}'\nicon: http://127.0.0.1/ricardian_assets/eosio.contracts/icons/account.png#3d55a2fc3a5c20b456f5657faf666bc25ffd06f4836c5e8256f741149b0b294f\n---\n\nModify, and create if necessary, the {{permission}} permission of {{account}} to have a parent permission of {{parent}} and the following authority:\n{{to_json auth}}"},{name:"updaterex",type:"updaterex",ricardian_contract:"---\nspec_version: \"0.2.0\"\ntitle: Update REX Owner Vote Weight\nsummary: 'Update vote weight to current value of held REX tokens'\nicon: http://127.0.0.1/ricardian_assets/eosio.contracts/icons/rex.png#d229837fa62a464b9c71e06060aa86179adf0b3f4e3b8c4f9702f4f4b0c340a8\n---\n\nUpdate vote weight of {{owner}} account to current value of held REX tokens."},{name:"updtrevision",type:"updtrevision",ricardian_contract:"---\nspec_version: \"0.2.0\"\ntitle: Update System Contract Revision Number\nsummary: 'Update system contract revision number'\nicon: http://127.0.0.1/ricardian_assets/eosio.contracts/icons/admin.png#9bf1cec664863bd6aaac0f814b235f8799fb02c850e9aa5da34e8a004bd6518e\n---\n\n{{$action.account}} advances the system contract revision number to {{revision}}."},{name:"voteproducer",type:"voteproducer",ricardian_contract:"---\nspec_version: \"0.2.0\"\ntitle: Vote for Block Producers\nsummary: '{{nowrap voter}} votes for {{#if proxy}}the proxy {{nowrap proxy}}{{else}}up to 30 block producer candidates{{/if}}'\nicon: http://127.0.0.1/ricardian_assets/eosio.contracts/icons/voting.png#db28cd3db6e62d4509af3644ce7d377329482a14bb4bfaca2aa5f1400d8e8a84\n---\n\n{{#if proxy}}\n{{voter}} votes for the proxy {{proxy}}.\nAt the time of voting the full weight of voter’s staked (CPU + NET) tokens will be cast towards each of the producers voted by {{proxy}}.\n{{else}}\n{{voter}} votes for the following block producer candidates:\n\n{{#each producers}}\n  + {{this}}\n{{/each}}\n\nAt the time of voting the full weight of voter’s staked (CPU + NET) tokens will be cast towards each of the above producers.\n{{/if}}"},{name:"withdraw",type:"withdraw",ricardian_contract:"---\nspec_version: \"0.2.0\"\ntitle: Withdraw from REX Fund\nsummary: 'Withdraw {{nowrap amount}} from {{nowrap owner}}’s REX fund by transferring to {{owner}}’s liquid balance'\nicon: http://127.0.0.1/ricardian_assets/eosio.contracts/icons/rex.png#d229837fa62a464b9c71e06060aa86179adf0b3f4e3b8c4f9702f4f4b0c340a8\n---\n\nWithdraws {{amount}} from {{owner}}’s REX fund and transfer them to {{owner}}’s liquid balance."}],tables:[{name:"abihash",index_type:"i64",key_names:[],key_types:[],type:"abi_hash"},{name:"bidrefunds",index_type:"i64",key_names:[],key_types:[],type:"bid_refund"},{name:"cpuloan",index_type:"i64",key_names:[],key_types:[],type:"rex_loan"},{name:"delband",index_type:"i64",key_names:[],key_types:[],type:"delegated_bandwidth"},{name:"global",index_type:"i64",key_names:[],key_types:[],type:"eosio_global_state"},{name:"global2",index_type:"i64",key_names:[],key_types:[],type:"eosio_global_state2"},{name:"global3",index_type:"i64",key_names:[],key_types:[],type:"eosio_global_state3"},{name:"global4",index_type:"i64",key_names:[],key_types:[],type:"eosio_global_state4"},{name:"namebids",index_type:"i64",key_names:[],key_types:[],type:"name_bid"},{name:"netloan",index_type:"i64",key_names:[],key_types:[],type:"rex_loan"},{name:"producers",index_type:"i64",key_names:[],key_types:[],type:"producer_info"},{name:"producers2",index_type:"i64",key_names:[],key_types:[],type:"producer_info2"},{name:"rammarket",index_type:"i64",key_names:[],key_types:[],type:"exchange_state"},{name:"refunds",index_type:"i64",key_names:[],key_types:[],type:"refund_request"},{name:"retbuckets",index_type:"i64",key_names:[],key_types:[],type:"rex_return_buckets"},{name:"rexbal",index_type:"i64",key_names:[],key_types:[],type:"rex_balance"},{name:"rexfund",index_type:"i64",key_names:[],key_types:[],type:"rex_fund"},{name:"rexpool",index_type:"i64",key_names:[],key_types:[],type:"rex_pool"},{name:"rexqueue",index_type:"i64",key_names:[],key_types:[],type:"rex_order"},{name:"rexretpool",index_type:"i64",key_names:[],key_types:[],type:"rex_return_pool"},{name:"userres",index_type:"i64",key_names:[],key_types:[],type:"user_resources"},{name:"voters",index_type:"i64",key_names:[],key_types:[],type:"voter_info"}],ricardian_clauses:[{id:"UserAgreement",body:"User agreement for the chain can go here."},{id:"BlockProducerAgreement",body:"I, {{producer}}, hereby nominate myself for consideration as an elected block producer.\n\nIf {{producer}} is selected to produce blocks by the system contract, I will sign blocks with my registered block signing keys and I hereby attest that I will keep these keys secret and secure.\n\nIf {{producer}} is unable to perform obligations under this contract I will resign my position using the unregprod action.\n\nI acknowledge that a block is 'objectively valid' if it conforms to the deterministic blockchain rules in force at the time of its creation, and is 'objectively invalid' if it fails to conform to those rules.\n\n{{producer}} hereby agrees to only use my registered block signing keys to sign messages under the following scenarios:\n\n* proposing an objectively valid block at the time appointed by the block scheduling algorithm;\n* pre-confirming a block produced by another producer in the schedule when I find said block objectively valid;\n* and, confirming a block for which {{producer}} has received pre-confirmation messages from more than two-thirds of the active block producers.\n\nI hereby accept liability for any and all provable damages that result from my:\n\n* signing two different block proposals with the same timestamp;\n* signing two different block proposals with the same block number;\n* signing any block proposal which builds off of an objectively invalid block;\n* signing a pre-confirmation for an objectively invalid block;\n* or, signing a confirmation for a block for which I do not possess pre-confirmation messages from more than two-thirds of the active block producers.\n\nI hereby agree that double-signing for a timestamp or block number in concert with two or more other block producers shall automatically be deemed malicious and cause {{producer}} to be subject to:\n\n* a fine equal to the past year of compensation received,\n* immediate disqualification from being a producer,\n* and/or other damages.\n\nAn exception may be made if {{producer}} can demonstrate that the double-signing occurred due to a bug in the reference software; the burden of proof is on {{producer}}.\n\nI hereby agree not to interfere with the producer election process. I agree to process all producer election transactions that occur in blocks I create, to sign all objectively valid blocks I create that contain election transactions, and to sign all pre-confirmations and confirmations necessary to facilitate transfer of control to the next set of producers as determined by the system contract.\n\nI hereby acknowledge that more than two-thirds of the active block producers may vote to disqualify {{producer}} in the event {{producer}} is unable to produce blocks or is unable to be reached, according to criteria agreed to among block producers.\n\nIf {{producer}} qualifies for and chooses to collect compensation due to votes received, {{producer}} will provide a public endpoint allowing at least 100 peers to maintain synchronization with the blockchain and/or submit transactions to be included. {{producer}} shall maintain at least one validating node with full state and signature checking and shall report any objectively invalid blocks produced by the active block producers. Reporting shall be via a method to be agreed to among block producers, said method and reports to be made public.\n\nThe community agrees to allow {{producer}} to authenticate peers as necessary to prevent abuse and denial of service attacks; however, {{producer}} agrees not to discriminate against non-abusive peers.\n\nI agree to process transactions on a FIFO (first in, first out) best-effort basis and to honestly bill transactions for measured execution time.\n\nI {{producer}} agree not to manipulate the contents of blocks in order to derive profit from: the order in which transactions are included, or the hash of the block that is produced.\n\nI, {{producer}}, hereby agree to disclose and attest under penalty of perjury all ultimate beneficial owners of my business entity who own more than 10% and all direct shareholders.\n\nI, {{producer}}, hereby agree to cooperate with other block producers to carry out our respective and mutual obligations under this agreement, including but not limited to maintaining network stability and a valid blockchain.\n\nI, {{producer}}, agree to maintain a website hosted at {{url}} which contains up-to-date information on all disclosures required by this contract.\n\nI, {{producer}}, agree to set the location value of {{location}} such that {{producer}} is scheduled with minimal latency between my previous and next peer.\n\nI, {{producer}}, agree to maintain time synchronization within 10 ms of global atomic clock time, using a method agreed to among block producers.\n\nI, {{producer}}, agree not to produce blocks before my scheduled time unless I have received all blocks produced by the prior block producer.\n\nI, {{producer}}, agree not to publish blocks with timestamps more than 500ms in the future unless the prior block is more than 75% full by either NET or CPU bandwidth metrics.\n\nI, {{producer}}, agree not to set the RAM supply to more RAM than my nodes contain and to resign if I am unable to provide the RAM approved by more than two-thirds of active block producers, as shown in the system parameters."}],error_messages:[],abi_extensions:[],variants:[]}},tvR6:function(e,t){},"v/I6":function(e,t){}},["NHnr"]);
//# sourceMappingURL=app.2a9223daed18774fe836.js.map